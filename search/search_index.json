{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6982\u89c8 \u00b6 \u968f\u7b14","title":"\u6982\u89c8"},{"location":"#_1","text":"\u968f\u7b14","title":"\u6982\u89c8"},{"location":"devops/ops_prepare/","text":"\u8fd0\u7ef4\u601d\u8003 \u00b6","title":"\u8fd0\u7ef4\u601d\u8003"},{"location":"devops/ops_prepare/#_1","text":"","title":"\u8fd0\u7ef4\u601d\u8003"},{"location":"devops/read_list/","text":"Kubernetes Reboot Daemon \u00b6 https://github.com/weaveworks/kured Alarm web from tal-tech \u00b6 https://github.com/weaveworks/kuredhttps://github.com/tal-tech/alarm-dog Admission hook solution \u00b6 https://github.com/open-policy-agent/gatekeeper OPA Gatekeeper \u00b6 OPA(Open Policy Agent)[ https://www.openpolicyagent.org/docs/latest/ ]: \u5f00\u653e\u7b56\u7565\u4ee3\u7406\uff0c\u5176\u4f7f\u7528\u4e0d\u4ec5\u9650\u4e8e Kubernetes. OPA \u4f7f\u7528 (Rego)[ https://www.openpolicyagent.org/docs/latest/policy-language/#what-is-rego ] \u4f5c\u4e3a\u7279\u5b9a\u4e8e\u57df\u7684\u8bed\u8a00 OPA vs Gatekeeper (differents)[ https://github.com/open-policy-agent/gatekeeper#how-is-gatekeeper-different-from-opa ] Gatekeeper: \u7531 OPA \u63d0\u4f9b\u7684\u4e00\u4e2a\u53ef\u81ea\u5b9a\u4e49\u7684 Kubernetes Admission Webhook, \u4f7f\u7528 OPA \u7ea6\u675f\u6846\u67b6\u6765\u63cf\u8ff0\u548c\u5b9e\u65bd\u7b56\u7565\u3002 \u53c2\u8003\uff1a (\u9650\u5236\u6761\u4ef6\u6846\u67b6)[ https://github.com/open-policy-agent/frameworks/tree/master/constraint ] https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies-with-gatekeeper?hl=zh-cn steps: \u5b9a\u4e49 ConstraintTemplate (\u7ea6\u675f\u6a21\u7248)\uff0c \u5141\u8bb8\u7528\u6237\u58f0\u660e\u65b0\u7684\u7ea6\u675f\uff0c\u662f\u53ef\u91cd\u590d\u4f7f\u7528\u7684\u8bed\u53e5\uff08\u4f7f\u7528 Rego \u7f16\u5199\uff09\uff0c\u53ef\u6839\u636e\u9650\u5236\u6761\u4ef6\u4e2d\u5b9a\u4e49\u7684\u8981\u6c42\u5e94\u7528\u903b\u8f91\u4ee5\u8bc4\u4f30 Kubernetes \u5bf9\u8c61\u4e2d\u7684\u7279\u5b9a\u5b57\u6bb5\u3002 apiVersion : gatekeeper.sh/v1beta1 kind : ConstraintTemplate metadata : name : foosystemrequiredlabels spec : crd : spec : names : kind : FooSystemRequiredLabel validation : # Schema for the `parameters` field openAPIV3Schema : properties : labels : type : array items : string targets : - target : admission.k8s.gatekeeper.sh libs : # which is a list of all library functions that will be available to the rego package. Note that all packages in libs must have lib as a prefix (e.g. package lib.<something>) - | package lib.helpers make_message(missing) = msg { msg := sprintf(\"you must provide labels: %v\", [missing]) } rego : | package foosystemrequiredlabels import data.lib.helpers violation[{\"msg\": msg, \"details\": {\"missing_labels\": missing}}] { provided := {label | input.request.object.metadata.labels[label]} required := {label | label := input.parameters.labels[_]} missing := required - provided count(missing) > 0 msg := helpers.make_message(missing) } \u5b9a\u4e49 Constraint (\u9650\u5236\u6761\u4ef6) \u7ea6\u675f\u4e00\u7ec4\u6ee1\u8db3\u8981\u6c42\u7684\u58f0\u660e\uff0c\u662f\u5b89\u5168\u653f\u7b56\u7684\u8868\u793a\u5f62\u5f0f\uff0c\u5b83\u4eec\u5b9a\u4e49\u8981\u6c42\u548c\u5f3a\u5236\u6267\u884c\u8303\u56f4\u3002 apiVersion : constraints.gatekeeper.sh/v1beta1 kind : FooSystemRequiredLabel metadata : name : require-billing-label spec : match : namespace : [ \"expensive\" ] parameters : labels : [ \"billing\" ] Admission webhook \u00b6 API HTTP handler \u2192 Authentication \u2192 Mutating admission controllers \u2192 Object schema validation \u2192 Validating admission controllers \u2192 Persisted to ETCD Labels Best Practices \u00b6 https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ https://www.replex.io/blog/9-additional-best-practices-for-working-with-kubernetes-labels-and-label-selectors SpenSSl SAN Certificate \u00b6 https://liaoph.com/openssl-san/ https://zhuanlan.zhihu.com/p/26646377 CrossPlane Usage (AWS) \u00b6 https://aws.amazon.com/cn/blogs/china/connecting-aws-managed-services-to-your-argo-cd-pipeline-with-open-source-crossplane/ TCP/IP \u8be6\u89e3 \u00b6 https://coolshell.cn/articles/11609.html TCP UDP \u00b6 https://mp.weixin.qq.com/s?__biz=MzI0ODk2NDIyMQ==&mid=2247487108&idx=1&sn=7b47f421bb1dee4edb357a10399b7fec&chksm=e999fb96deee7280a17bfff44c27ef11a60e93e48f9da738670a779ecf6accb5a6a4ebd3cbcc&token=933742694&lang=zh_CN#rd GCP Deployment Manaer \u8be6\u89e3 \u00b6 https://cloud.google.com/deployment-manager/docs https://github.com/open-policy-agent/gatekeeper","title":"Read list"},{"location":"devops/read_list/#kubernetes-reboot-daemon","text":"https://github.com/weaveworks/kured","title":"Kubernetes Reboot Daemon"},{"location":"devops/read_list/#alarm-web-from-tal-tech","text":"https://github.com/weaveworks/kuredhttps://github.com/tal-tech/alarm-dog","title":"Alarm web from tal-tech"},{"location":"devops/read_list/#admission-hook-solution","text":"https://github.com/open-policy-agent/gatekeeper","title":"Admission hook solution"},{"location":"devops/read_list/#opa-gatekeeper","text":"OPA(Open Policy Agent)[ https://www.openpolicyagent.org/docs/latest/ ]: \u5f00\u653e\u7b56\u7565\u4ee3\u7406\uff0c\u5176\u4f7f\u7528\u4e0d\u4ec5\u9650\u4e8e Kubernetes. OPA \u4f7f\u7528 (Rego)[ https://www.openpolicyagent.org/docs/latest/policy-language/#what-is-rego ] \u4f5c\u4e3a\u7279\u5b9a\u4e8e\u57df\u7684\u8bed\u8a00 OPA vs Gatekeeper (differents)[ https://github.com/open-policy-agent/gatekeeper#how-is-gatekeeper-different-from-opa ] Gatekeeper: \u7531 OPA \u63d0\u4f9b\u7684\u4e00\u4e2a\u53ef\u81ea\u5b9a\u4e49\u7684 Kubernetes Admission Webhook, \u4f7f\u7528 OPA \u7ea6\u675f\u6846\u67b6\u6765\u63cf\u8ff0\u548c\u5b9e\u65bd\u7b56\u7565\u3002 \u53c2\u8003\uff1a (\u9650\u5236\u6761\u4ef6\u6846\u67b6)[ https://github.com/open-policy-agent/frameworks/tree/master/constraint ] https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies-with-gatekeeper?hl=zh-cn steps: \u5b9a\u4e49 ConstraintTemplate (\u7ea6\u675f\u6a21\u7248)\uff0c \u5141\u8bb8\u7528\u6237\u58f0\u660e\u65b0\u7684\u7ea6\u675f\uff0c\u662f\u53ef\u91cd\u590d\u4f7f\u7528\u7684\u8bed\u53e5\uff08\u4f7f\u7528 Rego \u7f16\u5199\uff09\uff0c\u53ef\u6839\u636e\u9650\u5236\u6761\u4ef6\u4e2d\u5b9a\u4e49\u7684\u8981\u6c42\u5e94\u7528\u903b\u8f91\u4ee5\u8bc4\u4f30 Kubernetes \u5bf9\u8c61\u4e2d\u7684\u7279\u5b9a\u5b57\u6bb5\u3002 apiVersion : gatekeeper.sh/v1beta1 kind : ConstraintTemplate metadata : name : foosystemrequiredlabels spec : crd : spec : names : kind : FooSystemRequiredLabel validation : # Schema for the `parameters` field openAPIV3Schema : properties : labels : type : array items : string targets : - target : admission.k8s.gatekeeper.sh libs : # which is a list of all library functions that will be available to the rego package. Note that all packages in libs must have lib as a prefix (e.g. package lib.<something>) - | package lib.helpers make_message(missing) = msg { msg := sprintf(\"you must provide labels: %v\", [missing]) } rego : | package foosystemrequiredlabels import data.lib.helpers violation[{\"msg\": msg, \"details\": {\"missing_labels\": missing}}] { provided := {label | input.request.object.metadata.labels[label]} required := {label | label := input.parameters.labels[_]} missing := required - provided count(missing) > 0 msg := helpers.make_message(missing) } \u5b9a\u4e49 Constraint (\u9650\u5236\u6761\u4ef6) \u7ea6\u675f\u4e00\u7ec4\u6ee1\u8db3\u8981\u6c42\u7684\u58f0\u660e\uff0c\u662f\u5b89\u5168\u653f\u7b56\u7684\u8868\u793a\u5f62\u5f0f\uff0c\u5b83\u4eec\u5b9a\u4e49\u8981\u6c42\u548c\u5f3a\u5236\u6267\u884c\u8303\u56f4\u3002 apiVersion : constraints.gatekeeper.sh/v1beta1 kind : FooSystemRequiredLabel metadata : name : require-billing-label spec : match : namespace : [ \"expensive\" ] parameters : labels : [ \"billing\" ]","title":"OPA Gatekeeper"},{"location":"devops/read_list/#admission-webhook","text":"API HTTP handler \u2192 Authentication \u2192 Mutating admission controllers \u2192 Object schema validation \u2192 Validating admission controllers \u2192 Persisted to ETCD","title":"Admission webhook"},{"location":"devops/read_list/#labels-best-practices","text":"https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ https://www.replex.io/blog/9-additional-best-practices-for-working-with-kubernetes-labels-and-label-selectors","title":"Labels Best Practices"},{"location":"devops/read_list/#spenssl-san-certificate","text":"https://liaoph.com/openssl-san/ https://zhuanlan.zhihu.com/p/26646377","title":"SpenSSl SAN Certificate"},{"location":"devops/read_list/#crossplane-usage-aws","text":"https://aws.amazon.com/cn/blogs/china/connecting-aws-managed-services-to-your-argo-cd-pipeline-with-open-source-crossplane/","title":"CrossPlane Usage (AWS)"},{"location":"devops/read_list/#tcpip","text":"https://coolshell.cn/articles/11609.html","title":"TCP/IP \u8be6\u89e3"},{"location":"devops/read_list/#tcp-udp","text":"https://mp.weixin.qq.com/s?__biz=MzI0ODk2NDIyMQ==&mid=2247487108&idx=1&sn=7b47f421bb1dee4edb357a10399b7fec&chksm=e999fb96deee7280a17bfff44c27ef11a60e93e48f9da738670a779ecf6accb5a6a4ebd3cbcc&token=933742694&lang=zh_CN#rd","title":"TCP UDP"},{"location":"devops/read_list/#gcp-deployment-manaer","text":"https://cloud.google.com/deployment-manager/docs https://github.com/open-policy-agent/gatekeeper","title":"GCP Deployment Manaer \u8be6\u89e3"},{"location":"devops/artifactory/cli/","text":"Jfrog CLI \u00b6 Setup jfrog cli config \u00b6 # Jfrog server id is \"Artifactory\" alias/name $ jfrog config add <SERVER_ID> JFrog platform URL: <administration -> general -> settings -> general settings | - Custom Base URL > JFrog access token ( Leave blank for username and password/API key ) : <leave blank> JFrog username: <your artifactory id> JFrog password or API key: <edit profile -> generate 'API Key' > Is the Artifactory reverse proxy configured to accept a client certificate? ( y/n ) [ n ] ? y Client certificate file path: <leave blank> Client certificate key path: <leave blank> # Test connection $ jfrog rt ping # or $ jfrog rt ping --server-id = <SERVER_ID> # if successfull then return 'OK' File upload \u00b6 $ jfrog rt u \"(*).tgz\" <YOUR_TARGET_REPOSITORY_NAME> --server-id = <SERVER_ID> Jfrog Administrator Docs Jfrog Cli Docs","title":"CLI"},{"location":"devops/artifactory/cli/#jfrog-cli","text":"","title":"Jfrog CLI"},{"location":"devops/artifactory/cli/#setup-jfrog-cli-config","text":"# Jfrog server id is \"Artifactory\" alias/name $ jfrog config add <SERVER_ID> JFrog platform URL: <administration -> general -> settings -> general settings | - Custom Base URL > JFrog access token ( Leave blank for username and password/API key ) : <leave blank> JFrog username: <your artifactory id> JFrog password or API key: <edit profile -> generate 'API Key' > Is the Artifactory reverse proxy configured to accept a client certificate? ( y/n ) [ n ] ? y Client certificate file path: <leave blank> Client certificate key path: <leave blank> # Test connection $ jfrog rt ping # or $ jfrog rt ping --server-id = <SERVER_ID> # if successfull then return 'OK'","title":"Setup jfrog cli config"},{"location":"devops/artifactory/cli/#file-upload","text":"$ jfrog rt u \"(*).tgz\" <YOUR_TARGET_REPOSITORY_NAME> --server-id = <SERVER_ID> Jfrog Administrator Docs Jfrog Cli Docs","title":"File upload"},{"location":"devops/ci/github_action/action_deployment/","text":"Github Action \u5f00\u53d1 \u00b6 \u81ea\u5b9a\u4e49 Action \u7684\u65b9\u6cd5 \u00b6 \u57fa\u4e8e ts/javascript \u521b\u5efa\u81ea\u5b9a\u4e49 Action \u00b6 \u767b\u5165 Github \u8bbf\u95ee typescript-action \u5e76\u70b9\u51fb Use this template \u9879\u76ee\u4e3b\u8981\u76ee\u5f55\u529f\u80fd\u63cf\u8ff0 . \u251c\u2500\u2500 __test__ # \u6d4b\u8bd5\u5165\u53e3 \u251c\u2500\u2500 dist # \u7f16\u8bd1\u6587\u4ef6 \u251c\u2500\u2500 action.yml # Action \u672c\u8eab\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5305\u542b\u5165\u53e3\u53c2\u6570\u63cf\u8ff0 \u251c\u2500\u2500 src # Action \u903b\u8f91 ts \u4ee3\u7801 actions/toolkit \u5de5\u5177\u6838\u5fc3\u5e93\u4ecb\u7ecd @actions/core \u7528\u4e8e\u914d\u7f6e\u8fd4\u56de\u503c\uff0c\u65e5\u5fd7\uff0c\u5bc6\u94a5\u6ce8\u518c\u548c\u8de8 action \u5bfc\u51fa\u53d8\u91cf @actions/exec \u7528\u4e8e\u6267\u884c\u547d\u4ee4 @actions/io \u7528\u4e8e \u6587\u4ef6\u64cd\u4f5c @actions/github GitHub\u57fa\u672c\u64cd\u4f5c \u5b89\u88c5 npm \u4f9d\u8d56 npm i <\u5e93> Note \u5982\u679c\u60f3\u4f7f\u7528 js-action \u53ef\u4ee5\u8bbf\u95ee https://github.com/actions/javascript-action \u7684 template \u751f\u6210. \u793a\u4f8b buildversion-action \u4e3b\u8981\u51fd\u6570\u903b\u8f91 ./src \u251c\u2500\u2500 context.ts # \u51fd\u6570\u5165\u53e3\u53c2\u6570 mapping \u251c\u2500\u2500 fs-helper.ts # \u6587\u4ef6\u64cd\u4f5c\u51fd\u6570 \u251c\u2500\u2500 main.ts # \u5165\u53e3\u51fd\u6570 \u251c\u2500\u2500 state-helper.ts # \u72b6\u6001\u7ba1\u7406 workflow \u4e2d\u5305\u542b\u5bf9\u5e94 action \u7684\u6d4b\u8bd5 job test : # make sure the action works on a clean machine without building runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - uses : ./ id : BUILD_VERSION_NUMBER with : file-path : ${{ github.workspace }}/__tests__/version.properties run-number : ${{ github.run_number }} - run : echo ${{ steps.BUILD_VERSION_NUMBER.outputs.build_number }} \u5176\u5b83\u53c2\u8003\uff1a setup-go Note \u4fee\u6539 scripts -> test : npm run-script build && jest prettier \u548c vscode ts format \u51b2\u7a81\uff0c\u63d0\u4ea4\u524d\u53ef\u4ee5\u901a\u8fc7 npm run format \u6216\u8005\u4fee\u6539 eslint \u76f8\u5173\u914d\u7f6e\u89e3\u51b3\uff0c\u5426\u5219 \u5728build\u9636\u6bb5\u8fd0\u884c npm run all \u4f1a\u62a5 lint \u9519\u8bef \u57fa\u4e8e Docker \u7a7f\u4ef6\u81ea\u5b9a\u4e49 Action \u00b6 \u767b\u5165 GitHub \u8bbf\u95ee hello-world-docker-action \u5e76\u70b9\u51fb Use this template s \u793a\u4f8b buildversion-docker-action \u4e3b\u8981\u51fd\u6570\u903b\u8f91 . \u251c\u2500\u2500 Dockerfile \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 action.yml # \u53c2\u6570\u58f0\u660e \u251c\u2500\u2500 entrypoint.sh # \u5165\u53e3\u51fd\u6570 workflow \u4e2d\u5305\u542b\u5bf9\u5e94 action \u7684\u6d4b\u8bd5 job test : # make sure the action works on a clean machine without building runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - uses : ./ id : BUILD_VERSION_NUMBER with : file-path : ./version.properties run-number : ${{ github.run_number }} - run : echo ${{ steps.BUILD_VERSION_NUMBER.outputs.build_number }} Note \u57fa\u4e8e Docker \u7684\u5b9e\u73b0\u8981\u6ce8\u610f\u7684\u662f workspace \u7684 mount \u8def\u5f84\u3002","title":"Action \u5f00\u53d1"},{"location":"devops/ci/github_action/action_deployment/#github-action","text":"","title":"Github Action \u5f00\u53d1"},{"location":"devops/ci/github_action/action_deployment/#action","text":"","title":"\u81ea\u5b9a\u4e49 Action \u7684\u65b9\u6cd5"},{"location":"devops/ci/github_action/action_deployment/#tsjavascript-action","text":"\u767b\u5165 Github \u8bbf\u95ee typescript-action \u5e76\u70b9\u51fb Use this template \u9879\u76ee\u4e3b\u8981\u76ee\u5f55\u529f\u80fd\u63cf\u8ff0 . \u251c\u2500\u2500 __test__ # \u6d4b\u8bd5\u5165\u53e3 \u251c\u2500\u2500 dist # \u7f16\u8bd1\u6587\u4ef6 \u251c\u2500\u2500 action.yml # Action \u672c\u8eab\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5305\u542b\u5165\u53e3\u53c2\u6570\u63cf\u8ff0 \u251c\u2500\u2500 src # Action \u903b\u8f91 ts \u4ee3\u7801 actions/toolkit \u5de5\u5177\u6838\u5fc3\u5e93\u4ecb\u7ecd @actions/core \u7528\u4e8e\u914d\u7f6e\u8fd4\u56de\u503c\uff0c\u65e5\u5fd7\uff0c\u5bc6\u94a5\u6ce8\u518c\u548c\u8de8 action \u5bfc\u51fa\u53d8\u91cf @actions/exec \u7528\u4e8e\u6267\u884c\u547d\u4ee4 @actions/io \u7528\u4e8e \u6587\u4ef6\u64cd\u4f5c @actions/github GitHub\u57fa\u672c\u64cd\u4f5c \u5b89\u88c5 npm \u4f9d\u8d56 npm i <\u5e93> Note \u5982\u679c\u60f3\u4f7f\u7528 js-action \u53ef\u4ee5\u8bbf\u95ee https://github.com/actions/javascript-action \u7684 template \u751f\u6210. \u793a\u4f8b buildversion-action \u4e3b\u8981\u51fd\u6570\u903b\u8f91 ./src \u251c\u2500\u2500 context.ts # \u51fd\u6570\u5165\u53e3\u53c2\u6570 mapping \u251c\u2500\u2500 fs-helper.ts # \u6587\u4ef6\u64cd\u4f5c\u51fd\u6570 \u251c\u2500\u2500 main.ts # \u5165\u53e3\u51fd\u6570 \u251c\u2500\u2500 state-helper.ts # \u72b6\u6001\u7ba1\u7406 workflow \u4e2d\u5305\u542b\u5bf9\u5e94 action \u7684\u6d4b\u8bd5 job test : # make sure the action works on a clean machine without building runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - uses : ./ id : BUILD_VERSION_NUMBER with : file-path : ${{ github.workspace }}/__tests__/version.properties run-number : ${{ github.run_number }} - run : echo ${{ steps.BUILD_VERSION_NUMBER.outputs.build_number }} \u5176\u5b83\u53c2\u8003\uff1a setup-go Note \u4fee\u6539 scripts -> test : npm run-script build && jest prettier \u548c vscode ts format \u51b2\u7a81\uff0c\u63d0\u4ea4\u524d\u53ef\u4ee5\u901a\u8fc7 npm run format \u6216\u8005\u4fee\u6539 eslint \u76f8\u5173\u914d\u7f6e\u89e3\u51b3\uff0c\u5426\u5219 \u5728build\u9636\u6bb5\u8fd0\u884c npm run all \u4f1a\u62a5 lint \u9519\u8bef","title":"\u57fa\u4e8e ts/javascript \u521b\u5efa\u81ea\u5b9a\u4e49 Action"},{"location":"devops/ci/github_action/action_deployment/#docker-action","text":"\u767b\u5165 GitHub \u8bbf\u95ee hello-world-docker-action \u5e76\u70b9\u51fb Use this template s \u793a\u4f8b buildversion-docker-action \u4e3b\u8981\u51fd\u6570\u903b\u8f91 . \u251c\u2500\u2500 Dockerfile \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 action.yml # \u53c2\u6570\u58f0\u660e \u251c\u2500\u2500 entrypoint.sh # \u5165\u53e3\u51fd\u6570 workflow \u4e2d\u5305\u542b\u5bf9\u5e94 action \u7684\u6d4b\u8bd5 job test : # make sure the action works on a clean machine without building runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - uses : ./ id : BUILD_VERSION_NUMBER with : file-path : ./version.properties run-number : ${{ github.run_number }} - run : echo ${{ steps.BUILD_VERSION_NUMBER.outputs.build_number }} Note \u57fa\u4e8e Docker \u7684\u5b9e\u73b0\u8981\u6ce8\u610f\u7684\u662f workspace \u7684 mount \u8def\u5f84\u3002","title":"\u57fa\u4e8e Docker \u7a7f\u4ef6\u81ea\u5b9a\u4e49 Action"},{"location":"devops/ci/github_action/kubernetes_runner/","text":"GitHub Action Kubernetes Runner \u00b6 GitHub Action \u5b98\u65b9\u76ee\u524d\u76f4\u63a5\u57fa\u4e8e kubernetes \u8d44\u6e90\u6574\u5408\u7684\u6587\u6863\uff0c\u4f46\u662f\u793e\u533a\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u672c\u6587\u76ee\u524d\u91c7\u7528\u7684\u5f00\u6e90\u65b9\u6848: actions-runner-controller \u4ee5\u4e0b\u6b65\u9aa4\u7528\u6765\u521b\u5efa\u57fa\u4e8e kubernetes self-host runner \u00b6 \u51c6\u5907\u5de5\u4f5c \u00b6 \u521b\u5efa Organization \u7ea7\u522b\u7684 Runner Group Runner Group \u53ef\u7528\u4e8e\u5728 Organizaton \u7ea7\u522b\u9650\u5236 Repo \u4f7f\u7528\u54ea\u4e9b GitHub Runner\u3002 \u53c2\u8003\u6587\u6863 \u521b\u5efa PAT(Personal Access Token) Organization PAT Page https://<GITHUB_ENTERPRISE_URL>/settings/tokens Organization Runners \u9700\u8981\u7684\u6743\u9650\u5982\u4e0b: repo (Full control) admin:org (Full control) admin:public_key (read:public_key) admin:repo_hook (read:repo_hook) admin:org_hook (Full control) notifications (Full control) workflow (Full control) Note \u521b\u5efa PAT \u540e\u8bb0\u5f97\u4fdd\u5b58\uff0c\u5982\u6709\u9057\u5fd8\u53ef\u4ee5\u901a\u8fc7 Regenerate \u91cd\u65b0\u751f\u6210 PAT \u6d4b\u8bd5 \u8fd0\u884c\u4e00\u4e0b\u547d\u4ee4: curl --header \"Authorization: token <GTIHUB_TOKEN>\" \\ -X GET \\ -H \"Accept: application/vnd.github.v3+json\" \\ https://<GITHUB_DOMAIN>/api/v3/orgs/<GITHUB_ORG>/actions/runners/registration-token \u5b89\u88c5 Action Runner Controller \u00b6 \u786e\u4fdd\u96c6\u7fa4\u5df2\u90e8\u7f72\u4e86 cert-manager actions-runner-controller \u4f7f\u7528 cert-manager \u7ba1\u7406 Admission Webhook \u7684\u8bc1\u4e66. \u5b89\u88c5\u6587\u6863\u8bf7\u8bbf\u95ee: Installing cert-manager on Kubernetes \u5b89\u88c5 action-runner-controller # \u7248\u672c\u53f7 \"v0.18.2\" \u6839\u636e\u5b9e\u9645\u9700\u6c42\u66ff\u6362 kubectl apply -f https://github.com/actions-runner-controller/actions-runner-controller/releases/download/v0.18.2/actions-runner-controller.yaml \u914d\u7f6e GitHub Enterprise \u7684\u94fe\u63a5\u5730\u5740 kubectl set env deploy controller-manager -c manager GITHUB_ENTERPRISE_URL = <GITHUB_ENTERPRISE_URL> --namespace actions-runner-system \u751f\u6210 Controller Manager \u76f8\u5173\u7684 Secret kubectl create secret generic controller-manager -n actions-runner-system --from-literal = github_token ={ PAT } \u901a\u8fc7 CRD \u521b\u5efa Runner apiVersion : actions.summerwind.dev/v1alpha1 kind : RunnerDeployment metadata : name : <GitHub_Org_Name>-runner namespace : <Namespace_Name> spec : replicas : 2 template : metadata : annotations : cluster-autoscaler.kubernetes.io/safe-to-evict : \"true\" spec : organization : <GitHub_Org_Name> env : [] group : <GitHub_Group_Name> labels : - <GitHub_Org_Name>-runner","title":"K8S Runner \u5b89\u88c5"},{"location":"devops/ci/github_action/kubernetes_runner/#github-action-kubernetes-runner","text":"GitHub Action \u5b98\u65b9\u76ee\u524d\u76f4\u63a5\u57fa\u4e8e kubernetes \u8d44\u6e90\u6574\u5408\u7684\u6587\u6863\uff0c\u4f46\u662f\u793e\u533a\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u672c\u6587\u76ee\u524d\u91c7\u7528\u7684\u5f00\u6e90\u65b9\u6848: actions-runner-controller","title":"GitHub Action Kubernetes Runner"},{"location":"devops/ci/github_action/kubernetes_runner/#kubernetes-self-host-runner","text":"","title":"\u4ee5\u4e0b\u6b65\u9aa4\u7528\u6765\u521b\u5efa\u57fa\u4e8e kubernetes self-host runner"},{"location":"devops/ci/github_action/kubernetes_runner/#_1","text":"\u521b\u5efa Organization \u7ea7\u522b\u7684 Runner Group Runner Group \u53ef\u7528\u4e8e\u5728 Organizaton \u7ea7\u522b\u9650\u5236 Repo \u4f7f\u7528\u54ea\u4e9b GitHub Runner\u3002 \u53c2\u8003\u6587\u6863 \u521b\u5efa PAT(Personal Access Token) Organization PAT Page https://<GITHUB_ENTERPRISE_URL>/settings/tokens Organization Runners \u9700\u8981\u7684\u6743\u9650\u5982\u4e0b: repo (Full control) admin:org (Full control) admin:public_key (read:public_key) admin:repo_hook (read:repo_hook) admin:org_hook (Full control) notifications (Full control) workflow (Full control) Note \u521b\u5efa PAT \u540e\u8bb0\u5f97\u4fdd\u5b58\uff0c\u5982\u6709\u9057\u5fd8\u53ef\u4ee5\u901a\u8fc7 Regenerate \u91cd\u65b0\u751f\u6210 PAT \u6d4b\u8bd5 \u8fd0\u884c\u4e00\u4e0b\u547d\u4ee4: curl --header \"Authorization: token <GTIHUB_TOKEN>\" \\ -X GET \\ -H \"Accept: application/vnd.github.v3+json\" \\ https://<GITHUB_DOMAIN>/api/v3/orgs/<GITHUB_ORG>/actions/runners/registration-token","title":"\u51c6\u5907\u5de5\u4f5c"},{"location":"devops/ci/github_action/kubernetes_runner/#action-runner-controller","text":"\u786e\u4fdd\u96c6\u7fa4\u5df2\u90e8\u7f72\u4e86 cert-manager actions-runner-controller \u4f7f\u7528 cert-manager \u7ba1\u7406 Admission Webhook \u7684\u8bc1\u4e66. \u5b89\u88c5\u6587\u6863\u8bf7\u8bbf\u95ee: Installing cert-manager on Kubernetes \u5b89\u88c5 action-runner-controller # \u7248\u672c\u53f7 \"v0.18.2\" \u6839\u636e\u5b9e\u9645\u9700\u6c42\u66ff\u6362 kubectl apply -f https://github.com/actions-runner-controller/actions-runner-controller/releases/download/v0.18.2/actions-runner-controller.yaml \u914d\u7f6e GitHub Enterprise \u7684\u94fe\u63a5\u5730\u5740 kubectl set env deploy controller-manager -c manager GITHUB_ENTERPRISE_URL = <GITHUB_ENTERPRISE_URL> --namespace actions-runner-system \u751f\u6210 Controller Manager \u76f8\u5173\u7684 Secret kubectl create secret generic controller-manager -n actions-runner-system --from-literal = github_token ={ PAT } \u901a\u8fc7 CRD \u521b\u5efa Runner apiVersion : actions.summerwind.dev/v1alpha1 kind : RunnerDeployment metadata : name : <GitHub_Org_Name>-runner namespace : <Namespace_Name> spec : replicas : 2 template : metadata : annotations : cluster-autoscaler.kubernetes.io/safe-to-evict : \"true\" spec : organization : <GitHub_Org_Name> env : [] group : <GitHub_Group_Name> labels : - <GitHub_Org_Name>-runner","title":"\u5b89\u88c5 Action Runner Controller"},{"location":"golang/gin/","text":"","title":"Gin"},{"location":"kubernetes/schedule_pattern/","text":"\u8282\u70b9\u8c03\u5ea6\u89c4\u5219 \u00b6 Worker Node \u6dfb\u52a0\u6807\u7b7e \u901a\u8fc7 nodeSelector \u548c nodeAffinity \u8bbe\u7f6e\u8c03\u5ea6\u7b56\u7565\uff1a NodeSelector: \u4fdd\u8bc1\u5e94\u7528\u53ea\u8c03\u5ea6\u5230\u5bf9\u5e94\u7684\u8282\u70b9\u4e0a NodeAffinity: \u8c03\u5ea6\u7b56\u7565 |\u7b56\u7565|\u89e3\u91ca| |---|---| |requiredDuringSchedulingIgnoredDuringExecution | \u82e5Pod\u5df2\u90e8\u7f72\u5373\u4f7f\u8282\u70b9\u6807\u7b7e\u53d1\u751f\u53d8\u5316\u4e0d\u518d\u6ee1\u8db3\u6307\u5b9a\u6761\u4ef6\u4e5f\u4f1a\u7ee7\u7eed\u8fd0\u884c.\uff5c |requiredDuringSchedulingRequiredDuringExecution | \u82e5Pod\u5df2\u90e8\u7f72\u5373\u4f7f\u8282\u70b9\u6807\u7b7e\u53d1\u751f\u53d8\u5316\u4e0d\u518d\u6ee1\u8db3\u6307\u5b9a\u6761\u4ef6\u5219\u91cd\u65b0\u7b97\u5219\u7b26\u5408\u8981\u6c42\u7684\u8282\u70b9.| |preferredDuringSchedulingIgnoredDuringExecution | \u4f18\u5148 \u90e8\u7f72\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u8282\u70b9\u4e0a\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u5219\u5ffd\u7565\u6761\u4ef6\u6309\u6b63\u5e38\u903b\u8f91\u7ee7\u7eed\u90e8\u7f72.|","title":"Schedule pattern"},{"location":"kubernetes/schedule_pattern/#_1","text":"Worker Node \u6dfb\u52a0\u6807\u7b7e \u901a\u8fc7 nodeSelector \u548c nodeAffinity \u8bbe\u7f6e\u8c03\u5ea6\u7b56\u7565\uff1a NodeSelector: \u4fdd\u8bc1\u5e94\u7528\u53ea\u8c03\u5ea6\u5230\u5bf9\u5e94\u7684\u8282\u70b9\u4e0a NodeAffinity: \u8c03\u5ea6\u7b56\u7565 |\u7b56\u7565|\u89e3\u91ca| |---|---| |requiredDuringSchedulingIgnoredDuringExecution | \u82e5Pod\u5df2\u90e8\u7f72\u5373\u4f7f\u8282\u70b9\u6807\u7b7e\u53d1\u751f\u53d8\u5316\u4e0d\u518d\u6ee1\u8db3\u6307\u5b9a\u6761\u4ef6\u4e5f\u4f1a\u7ee7\u7eed\u8fd0\u884c.\uff5c |requiredDuringSchedulingRequiredDuringExecution | \u82e5Pod\u5df2\u90e8\u7f72\u5373\u4f7f\u8282\u70b9\u6807\u7b7e\u53d1\u751f\u53d8\u5316\u4e0d\u518d\u6ee1\u8db3\u6307\u5b9a\u6761\u4ef6\u5219\u91cd\u65b0\u7b97\u5219\u7b26\u5408\u8981\u6c42\u7684\u8282\u70b9.| |preferredDuringSchedulingIgnoredDuringExecution | \u4f18\u5148 \u90e8\u7f72\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u8282\u70b9\u4e0a\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u5219\u5ffd\u7565\u6761\u4ef6\u6309\u6b63\u5e38\u903b\u8f91\u7ee7\u7eed\u90e8\u7f72.|","title":"\u8282\u70b9\u8c03\u5ea6\u89c4\u5219"},{"location":"kubernetes/knowledge/cpu_limit/","text":"\u7b80\u4ecb \u00b6 Kubernetes \u901a\u8fc7\u5bf9 CPU \u548c RAM\uff0c\u8fd8\u6709\u5176\u4ed6\u8d44\u6e90\u7684\u9650\u5236\uff0c\u53ef\u4ee5\u4fdd\u62a4\u8282\u70b9\u514d\u4e8e\u8017\u5c3d\u8d44\u6e90\u5e76\u53d8\u5f97\u65e0\u54cd\u5e94\u3002 \u5185\u5b58\u9650\u5236: \u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5 Pod \u91cd\u542f\u539f\u56e0\u662f\u5426\u4e3a OOMKilled \u6765\u5224\u5b9a\u3002 CPU \u9650\u5236: Kubernetes \u4f7f\u7528\u5185\u6838\u8282\u6d41\u548c\u5176\u66b4\u9732\u7684\u6307\u6807\u800c\u4e0d\u662f cgroup \u76f8\u5173\u6307\u6807\uff0c\u8fd9\u5c31\u5f88\u96be\u68c0\u6d4b CPU \u8282\u6d41\u3002\u8fd9\u5c06\u5bfc\u81f4\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u8d85\u51fa CPU \u9650\u5236\uff0c\u5b83\u5c31\u4f1a\u53d7\u5230\u9650\u5236\u3002 CPU \u9650\u5236\u7684\u5fc5\u8981\u6027 \u00b6 \u82e5\u5bb9\u5668\u6ca1\u6709\u6307\u5b9a CPU \u4e0a\u9650\uff0c\u90a3\u5b83\u5c06\u4f7f\u7528\u8be5\u8282\u70b9\u4e0a\u6240\u6709\u53ef\u7528\u7684 CPU\uff0c\u53ef\u80fd\u5bfc\u81f4\u7684\u60c5\u51b5\u662f \u540c\u8282\u70b9\u5176\u5b83 CPU \u5bc6\u96c6\u578b\u5bb9\u5668\u51cf\u6162\uff0c\u5e76\u53ef\u80fd\u8017\u5c3d\u540c\u8282\u70b9\u4e0a\u7684 CPU \u8d44\u6e90\u3002 \u5f71\u54cd kubernetes \u6838\u5fc3\u7ec4\u4ef6\u8fdb\u800c\u9020\u6210\u8282\u70b9\u72b6\u6001\u8f6c\u6362\u4e3a NotReady \u5bfc\u81f4\u5bb9\u5668\u91cd\u65b0\u8c03\u5ea6 CPU \u9650\u5236\u7684\u5de5\u4f5c\u539f\u7406 \u00b6 \u901a\u8fc7\u9650\u5236\u786e\u4fdd\u5bb9\u5668 CPU \u8fbe\u5230\u6307\u5b9a\u9650\u5236\u4f1a\u6536\u5230\u8282\u6d41\u3002 Kubernetes \u4f7f\u7528 CFS\uff08\u5b8c\u5168\u516c\u5e73\u8c03\u5ea6\uff09\u914d\u989d\u5bf9\u7a0b\u5e8f\u7684 Pod \u5b9e\u65bd CPU \u9650\u5236\u3002 CFS \u6839\u636e\u65f6\u6bb5\u800c\u4e0d\u662f\u57fa\u4e8e\u53ef\u7528\u7684 CPU \u529f\u7387\u6765\u5904\u7406\u8fdb\u7a0b\u7684 CPU \u8d44\u6e90\u5206\u914d\u3002 \u4f7f\u7528\u4ee5\u4e0b\u4e24\u4e2a\u6587\u4ef6: cpu.cfs_quota_us\uff1a\u4e00\u6bb5\u65f6\u95f4\u5185\u7684\u603b\u53ef\u7528\u8fd0\u884c\u65f6\u95f4[\u4ee5\u5fae\u79d2\u4e3a\u5355\u4f4d] cat /sys/fs/cgroup/cpu,cpuacct/cpu.cfs_period_us 100000 us = 100 ms cpu.cfs_period_us\uff1a\u5468\u671f\u7684\u957f\u5ea6[\u4ee5\u5fae\u79d2\u4e3a\u5355\u4f4d] cat /sys/fs/cgroup/cpu,cpuacct/cpu.cfs_quota_us \u4e3e\u4f8b\uff1a \u5047\u8bbe\u7a0b\u5e8fA\u9700\u8981200ms\u7684\u5904\u7406\u65f6\u95f4\uff0c\u5f53\u8bbe\u7f6e CPU \u9650\u5236\u4e3a 0.4 CPUs \u5373\u7a0b\u5e8f\u5728\u6bcf100ms\u5468\u671f\u83b7\u5f9740ms\u7684\u8fd0\u884c\u65f6\u95f4\uff0c\u90a3\u4e48\u7a0b\u5e8fA\u9700\u8981\u82b1\u8d39440\u6beb\u79d2\u6765\u5b8c\u6210\u3002 \u603b\u7ed3 \u00b6 CPU \u9650\u5236\u8bbe\u5b9a\u8981\u8003\u8651: \u5e94\u7528\u5e94\u8be5\u663e\u793a\u5305\u542b CPU \u9650\u5236\u7684\u8bbe\u5b9a\u3002 \u4f9d\u636e\u670d\u52a1 CPU \u7684\u5b9e\u9645\u9700\u6c42\u4f5c\u4e3a limit \u8bbe\u5b9a\u503c\u7684\u53c2\u8003\u3002 \u53c2\u8003\uff1a what-wed-do-to-save-from-the-well-known-k8s-incident cpu-default-namespace assign-cpu-resource understanding-resource-limits-in-kubernetes-cpu-time manage-resources-containers","title":"CPU"},{"location":"kubernetes/knowledge/cpu_limit/#_1","text":"Kubernetes \u901a\u8fc7\u5bf9 CPU \u548c RAM\uff0c\u8fd8\u6709\u5176\u4ed6\u8d44\u6e90\u7684\u9650\u5236\uff0c\u53ef\u4ee5\u4fdd\u62a4\u8282\u70b9\u514d\u4e8e\u8017\u5c3d\u8d44\u6e90\u5e76\u53d8\u5f97\u65e0\u54cd\u5e94\u3002 \u5185\u5b58\u9650\u5236: \u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5 Pod \u91cd\u542f\u539f\u56e0\u662f\u5426\u4e3a OOMKilled \u6765\u5224\u5b9a\u3002 CPU \u9650\u5236: Kubernetes \u4f7f\u7528\u5185\u6838\u8282\u6d41\u548c\u5176\u66b4\u9732\u7684\u6307\u6807\u800c\u4e0d\u662f cgroup \u76f8\u5173\u6307\u6807\uff0c\u8fd9\u5c31\u5f88\u96be\u68c0\u6d4b CPU \u8282\u6d41\u3002\u8fd9\u5c06\u5bfc\u81f4\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u8d85\u51fa CPU \u9650\u5236\uff0c\u5b83\u5c31\u4f1a\u53d7\u5230\u9650\u5236\u3002","title":"\u7b80\u4ecb"},{"location":"kubernetes/knowledge/cpu_limit/#cpu","text":"\u82e5\u5bb9\u5668\u6ca1\u6709\u6307\u5b9a CPU \u4e0a\u9650\uff0c\u90a3\u5b83\u5c06\u4f7f\u7528\u8be5\u8282\u70b9\u4e0a\u6240\u6709\u53ef\u7528\u7684 CPU\uff0c\u53ef\u80fd\u5bfc\u81f4\u7684\u60c5\u51b5\u662f \u540c\u8282\u70b9\u5176\u5b83 CPU \u5bc6\u96c6\u578b\u5bb9\u5668\u51cf\u6162\uff0c\u5e76\u53ef\u80fd\u8017\u5c3d\u540c\u8282\u70b9\u4e0a\u7684 CPU \u8d44\u6e90\u3002 \u5f71\u54cd kubernetes \u6838\u5fc3\u7ec4\u4ef6\u8fdb\u800c\u9020\u6210\u8282\u70b9\u72b6\u6001\u8f6c\u6362\u4e3a NotReady \u5bfc\u81f4\u5bb9\u5668\u91cd\u65b0\u8c03\u5ea6","title":"CPU \u9650\u5236\u7684\u5fc5\u8981\u6027"},{"location":"kubernetes/knowledge/cpu_limit/#cpu_1","text":"\u901a\u8fc7\u9650\u5236\u786e\u4fdd\u5bb9\u5668 CPU \u8fbe\u5230\u6307\u5b9a\u9650\u5236\u4f1a\u6536\u5230\u8282\u6d41\u3002 Kubernetes \u4f7f\u7528 CFS\uff08\u5b8c\u5168\u516c\u5e73\u8c03\u5ea6\uff09\u914d\u989d\u5bf9\u7a0b\u5e8f\u7684 Pod \u5b9e\u65bd CPU \u9650\u5236\u3002 CFS \u6839\u636e\u65f6\u6bb5\u800c\u4e0d\u662f\u57fa\u4e8e\u53ef\u7528\u7684 CPU \u529f\u7387\u6765\u5904\u7406\u8fdb\u7a0b\u7684 CPU \u8d44\u6e90\u5206\u914d\u3002 \u4f7f\u7528\u4ee5\u4e0b\u4e24\u4e2a\u6587\u4ef6: cpu.cfs_quota_us\uff1a\u4e00\u6bb5\u65f6\u95f4\u5185\u7684\u603b\u53ef\u7528\u8fd0\u884c\u65f6\u95f4[\u4ee5\u5fae\u79d2\u4e3a\u5355\u4f4d] cat /sys/fs/cgroup/cpu,cpuacct/cpu.cfs_period_us 100000 us = 100 ms cpu.cfs_period_us\uff1a\u5468\u671f\u7684\u957f\u5ea6[\u4ee5\u5fae\u79d2\u4e3a\u5355\u4f4d] cat /sys/fs/cgroup/cpu,cpuacct/cpu.cfs_quota_us \u4e3e\u4f8b\uff1a \u5047\u8bbe\u7a0b\u5e8fA\u9700\u8981200ms\u7684\u5904\u7406\u65f6\u95f4\uff0c\u5f53\u8bbe\u7f6e CPU \u9650\u5236\u4e3a 0.4 CPUs \u5373\u7a0b\u5e8f\u5728\u6bcf100ms\u5468\u671f\u83b7\u5f9740ms\u7684\u8fd0\u884c\u65f6\u95f4\uff0c\u90a3\u4e48\u7a0b\u5e8fA\u9700\u8981\u82b1\u8d39440\u6beb\u79d2\u6765\u5b8c\u6210\u3002","title":"CPU \u9650\u5236\u7684\u5de5\u4f5c\u539f\u7406"},{"location":"kubernetes/knowledge/cpu_limit/#_2","text":"CPU \u9650\u5236\u8bbe\u5b9a\u8981\u8003\u8651: \u5e94\u7528\u5e94\u8be5\u663e\u793a\u5305\u542b CPU \u9650\u5236\u7684\u8bbe\u5b9a\u3002 \u4f9d\u636e\u670d\u52a1 CPU \u7684\u5b9e\u9645\u9700\u6c42\u4f5c\u4e3a limit \u8bbe\u5b9a\u503c\u7684\u53c2\u8003\u3002 \u53c2\u8003\uff1a what-wed-do-to-save-from-the-well-known-k8s-incident cpu-default-namespace assign-cpu-resource understanding-resource-limits-in-kubernetes-cpu-time manage-resources-containers","title":"\u603b\u7ed3"},{"location":"kubernetes/knowledge/hpa/","text":"Overview \u00b6 HPA \u53ef\u4ee5\u57fa\u4e8e CPU/MEM \u5229\u7528\u7387\u81ea\u52a8\u6269\u7f29 Deployment, StatefulSet \u4e2d\u7684 Pod \u6570\u91cf, \u540c\u65f6\u4e5f\u53ef\u4ee5\u57fa\u4e8e\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u7684\u81ea\u5b9a\u4e49\u5ea6\u91cf\u6307\u6807\u6765\u6267\u884c\u81ea\u52a8\u6269\u7f29\u3002 HPA \u4f7f\u7528\u7387\u8ba1\u7b97 \u00b6 \u83b7\u53d6 Pod resource request func calculatePodRequests ( pods [] * v1 . Pod , container string , resource v1 . ResourceName ) ( map [ string ] int64 , error ) { requests := make ( map [ string ] int64 , len ( pods )) for _ , pod := range pods { podSum := int64 ( 0 ) for _ , c := range pod . Spec . Containers { if container == \"\" || container == c . Name { if containerRequest , ok := c . Resources . Requests [ resource ]; ok { podSum += containerRequest . MilliValue () } else { return nil , fmt . Errorf ( \"missing request for %s\" , resource ) } } } requests [ pod . Name ] = podSum } return requests , nil } \u8ba1\u7b97\u4f7f\u7528\u7387 // GetResourceUtilizationRatio takes in a set of metrics, a set of matching requests, // and a target utilization percentage, and calculates the ratio of // desired to actual utilization (returning that, the actual utilization, and the raw average value) func GetResourceUtilizationRatio ( metrics PodMetricsInfo , requests map [ string ] int64 , targetUtilization int32 ) ( utilizationRatio float64 , currentUtilization int32 , rawAverageValue int64 , err error ) { metricsTotal := int64 ( 0 ) requestsTotal := int64 ( 0 ) numEntries := 0 for podName , metric := range metrics { request , hasRequest := requests [ podName ] if ! hasRequest { // we check for missing requests elsewhere, so assuming missing requests == extraneous metrics continue } metricsTotal += metric . Value requestsTotal += request numEntries ++ } // if the set of requests is completely disjoint from the set of metrics, // then we could have an issue where the requests total is zero if requestsTotal == 0 { return 0 , 0 , 0 , fmt . Errorf ( \"no metrics returned matched known pods\" ) } currentUtilization = int32 (( metricsTotal * 100 ) / requestsTotal ) return float64 ( currentUtilization ) / float64 ( targetUtilization ), currentUtilization , metricsTotal / int64 ( numEntries ), nil } \u8c03\u7528\u94fe\u8def\uff1a \u00b6 scaleForResourceMappings -> computeReplicasForMetrics -> Scales().Update \u66f4\u65b0\u526f\u672c\u6570 \u8ba1\u7b97\u89c4\u5219: \u00b6 \u671f\u671b\u526f\u672c\u6570 = ceil[\u5f53\u524d\u526f\u672c\u6570 * (\u5f53\u524d\u6307\u6807 / \u671f\u671b\u6307\u6807)] \u4e0d\u8db3 \u00b6 \u5e73\u53f0\u8d44\u6e90\u8d85\u914d\u5bfc\u81f4\u6309\u7167request\u6765\u8ba1\u7b97\u4f7f\u7528\u7387\u4f1a\u8d85\u51fa\u8d44\u6e90\u603b\u91cf\u3002 \u53ea\u80fd\u6839\u636e Pod \u7684\u8d44\u6e90\u4f7f\u7528\u7387\u8fdb\u884c\u6269\u5c55\uff0c\u5bf9\u4e8e\u591a\u5bb9\u5668 Pod \u4e0d\u53cb\u597d\u3002 \u5355\u7ebf\u7a0b\u5b9e\u73b0\u7684\u6027\u80fd\u95ee\u9898, HPA Source code // Run begins watching and syncing. func ( a * HorizontalController ) Run ( stopCh <- chan struct {}) { defer utilruntime . HandleCrash () defer a . queue . ShutDown () klog . Infof ( \"Starting HPA controller\" ) defer klog . Infof ( \"Shutting down HPA controller\" ) if ! cache . WaitForNamedCacheSync ( \"HPA\" , stopCh , a . hpaListerSynced , a . podListerSynced ) { return } // start a single worker (we may wish to start more in the future) go wait . Until ( a . worker , time . Second , stopCh ) <- stopCh }","title":"HPA"},{"location":"kubernetes/knowledge/hpa/#overview","text":"HPA \u53ef\u4ee5\u57fa\u4e8e CPU/MEM \u5229\u7528\u7387\u81ea\u52a8\u6269\u7f29 Deployment, StatefulSet \u4e2d\u7684 Pod \u6570\u91cf, \u540c\u65f6\u4e5f\u53ef\u4ee5\u57fa\u4e8e\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u7684\u81ea\u5b9a\u4e49\u5ea6\u91cf\u6307\u6807\u6765\u6267\u884c\u81ea\u52a8\u6269\u7f29\u3002","title":"Overview"},{"location":"kubernetes/knowledge/hpa/#hpa","text":"\u83b7\u53d6 Pod resource request func calculatePodRequests ( pods [] * v1 . Pod , container string , resource v1 . ResourceName ) ( map [ string ] int64 , error ) { requests := make ( map [ string ] int64 , len ( pods )) for _ , pod := range pods { podSum := int64 ( 0 ) for _ , c := range pod . Spec . Containers { if container == \"\" || container == c . Name { if containerRequest , ok := c . Resources . Requests [ resource ]; ok { podSum += containerRequest . MilliValue () } else { return nil , fmt . Errorf ( \"missing request for %s\" , resource ) } } } requests [ pod . Name ] = podSum } return requests , nil } \u8ba1\u7b97\u4f7f\u7528\u7387 // GetResourceUtilizationRatio takes in a set of metrics, a set of matching requests, // and a target utilization percentage, and calculates the ratio of // desired to actual utilization (returning that, the actual utilization, and the raw average value) func GetResourceUtilizationRatio ( metrics PodMetricsInfo , requests map [ string ] int64 , targetUtilization int32 ) ( utilizationRatio float64 , currentUtilization int32 , rawAverageValue int64 , err error ) { metricsTotal := int64 ( 0 ) requestsTotal := int64 ( 0 ) numEntries := 0 for podName , metric := range metrics { request , hasRequest := requests [ podName ] if ! hasRequest { // we check for missing requests elsewhere, so assuming missing requests == extraneous metrics continue } metricsTotal += metric . Value requestsTotal += request numEntries ++ } // if the set of requests is completely disjoint from the set of metrics, // then we could have an issue where the requests total is zero if requestsTotal == 0 { return 0 , 0 , 0 , fmt . Errorf ( \"no metrics returned matched known pods\" ) } currentUtilization = int32 (( metricsTotal * 100 ) / requestsTotal ) return float64 ( currentUtilization ) / float64 ( targetUtilization ), currentUtilization , metricsTotal / int64 ( numEntries ), nil }","title":"HPA \u4f7f\u7528\u7387\u8ba1\u7b97"},{"location":"kubernetes/knowledge/hpa/#_1","text":"scaleForResourceMappings -> computeReplicasForMetrics -> Scales().Update \u66f4\u65b0\u526f\u672c\u6570","title":"\u8c03\u7528\u94fe\u8def\uff1a"},{"location":"kubernetes/knowledge/hpa/#_2","text":"\u671f\u671b\u526f\u672c\u6570 = ceil[\u5f53\u524d\u526f\u672c\u6570 * (\u5f53\u524d\u6307\u6807 / \u671f\u671b\u6307\u6807)]","title":"\u8ba1\u7b97\u89c4\u5219:"},{"location":"kubernetes/knowledge/hpa/#_3","text":"\u5e73\u53f0\u8d44\u6e90\u8d85\u914d\u5bfc\u81f4\u6309\u7167request\u6765\u8ba1\u7b97\u4f7f\u7528\u7387\u4f1a\u8d85\u51fa\u8d44\u6e90\u603b\u91cf\u3002 \u53ea\u80fd\u6839\u636e Pod \u7684\u8d44\u6e90\u4f7f\u7528\u7387\u8fdb\u884c\u6269\u5c55\uff0c\u5bf9\u4e8e\u591a\u5bb9\u5668 Pod \u4e0d\u53cb\u597d\u3002 \u5355\u7ebf\u7a0b\u5b9e\u73b0\u7684\u6027\u80fd\u95ee\u9898, HPA Source code // Run begins watching and syncing. func ( a * HorizontalController ) Run ( stopCh <- chan struct {}) { defer utilruntime . HandleCrash () defer a . queue . ShutDown () klog . Infof ( \"Starting HPA controller\" ) defer klog . Infof ( \"Shutting down HPA controller\" ) if ! cache . WaitForNamedCacheSync ( \"HPA\" , stopCh , a . hpaListerSynced , a . podListerSynced ) { return } // start a single worker (we may wish to start more in the future) go wait . Until ( a . worker , time . Second , stopCh ) <- stopCh }","title":"\u4e0d\u8db3"},{"location":"kubernetes/knowledge/mark/","text":"","title":"Mark"},{"location":"kubernetes/knowledge/resource_map/","text":"","title":"Resource map"},{"location":"kubernetes/monitor/alert/","text":"\u62a5\u8b66\u76f8\u5173 \u00b6 \u4e3b\u6d41\u7684\u76d1\u63a7\u5e73\u53f0\u90fd\u63d0\u4f9bwebhook\u7684\u65b9\u5f0f\u4ee5\u6269\u5c55\u62a5\u8b66\u6a21\u5757\uff0c\u8fd9\u79cd\u65b9\u5f0f\u7075\u6d3b\u4e5f\u6613\u4e8e\u6269\u5c55\u3002 \u62a5\u8b66\u7cfb\u7edf\u5e94\u8be5\u5305\u542b\u529f\u80fd: \u00b6 \u62a5\u8b66\u6e90\u7ba1\u7406\uff0c\u5373\u5bf9\u63a5\u591a\u5e73\u53f0 \u62a5\u8b66\u6e20\u9053\u7ba1\u7406\uff0c\u5373\u6839\u636e\u7528\u6237\u8981\u6c42\u5bf9\u63a5\u591a\u6e20\u9053: Dingtalk, Slack, WeChat, EMail, Phone Call\u7b49 \u503c\u73ed\u7ba1\u7406\uff0c\u6839\u636e\u65f6\u6bb5\u6216\u4e00\u5b9a\u89c4\u5219\u5b89\u6392\u503c\u73ed\u4eba\u5458\uff0c\u6211\u7684\u7406\u89e3\u662f\u4e3b\u8981\u4ee5\u65f6\u95f4\u4e3a\u4e3b\u7ebf\u7684\u6392\u73ed\u7ba1\u7406\u3002 \u7528\u6237\u7ba1\u7406\uff0c\u5305\u62ec\uff1a\u8054\u7cfb\u65b9\u5f0f\uff0c\u65f6\u533a\uff0c\u8bed\u8a00\u7b49\u3002 \u62a5\u8b66\u6291\u5236\uff0c\u5206\u7ec4\uff0c\u9759\u9ed8\u529f\u80fd \u5546\u4e1a\u9009\u578b\uff1a \u00b6 Pagerduty Opsgien ILert \u5f00\u6e90\u9009\u578b: \u00b6 Alertmanager Zabbix \u6211\u7684\u89c2\u70b9: \u00b6 \u5728\u9009\u62e9\u7684\u9053\u8def\u4e0a\u6ca1\u6709\u5bf9\u9519\u3002 \u5546\u4e1a\u65b9\u6848\u91cc\uff1a \u00b6 \u5916\u4f01Pagerduty\u7528\u7684\u6bd4\u8f83\u591a\u3002 OPsgien\u600e\u4e48\u8bf4\u5462Jira confluence \u4e00\u5bb6\u7684\u4ea7\u54c1\u4f18\u7f3a\u70b9\u81ea\u5df1\u54c1\u5427\u3002 ILert \u548c Pagerduty \u7c7b\u4f3c\uff0c\u4e2a\u4eba\u633a\u559c\u6b22 \u5f00\u6e90\u65b9\u6848\u91cc\uff1a \u00b6 Zabbix: \u4e2d\u5c0f\u578b\u516c\u53f8\u5728\u62a5\u8b66\u548c\u9875\u9762\u5c55\u793a\u65b9\u9762\u6211\u4e2a\u4eba\u86ee\u559c\u6b22\u7684\uff0c\u5f00\u53d1\u6210\u672c\u4f4e\uff0c\u6613\u7528\u6027\u8f83\u597d\uff0c\u4e0d\u8fc7\u4ee5\u670d\u52a1\u5668\u4e3a\u4e2d\u5fc3\u7684\u6982\u5ff5\u771f\u7684\u9700\u8981\u4f60\u81ea\u5df1\u770b\u662f\u5426\u80fd\u591f\u7406\u89e3\u548c\u59a5\u534f\uff0c\u672a\u6765\u6211\u4e5f\u4f1a\u5206\u4eab\u4e00\u4e2a\u57fa\u4e8eZabbix API\u7b80\u5316\u7684\u8fd0\u7ef4\u811a\u672c\u3002 Alertmanager \u65b9\u9762\u8fd8\u6709\u4e00\u4e9b\u529f\u80fd\u4e0a\u9700\u8981\u5176\u5b83\u7ec4\u4ef6\u914d\u5408\uff0c\u53ef\u4ee5\u8003\u8651\u6574\u5408\u5230\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\u3002","title":"\u62a5\u8b66"},{"location":"kubernetes/monitor/alert/#_1","text":"\u4e3b\u6d41\u7684\u76d1\u63a7\u5e73\u53f0\u90fd\u63d0\u4f9bwebhook\u7684\u65b9\u5f0f\u4ee5\u6269\u5c55\u62a5\u8b66\u6a21\u5757\uff0c\u8fd9\u79cd\u65b9\u5f0f\u7075\u6d3b\u4e5f\u6613\u4e8e\u6269\u5c55\u3002","title":"\u62a5\u8b66\u76f8\u5173"},{"location":"kubernetes/monitor/alert/#_2","text":"\u62a5\u8b66\u6e90\u7ba1\u7406\uff0c\u5373\u5bf9\u63a5\u591a\u5e73\u53f0 \u62a5\u8b66\u6e20\u9053\u7ba1\u7406\uff0c\u5373\u6839\u636e\u7528\u6237\u8981\u6c42\u5bf9\u63a5\u591a\u6e20\u9053: Dingtalk, Slack, WeChat, EMail, Phone Call\u7b49 \u503c\u73ed\u7ba1\u7406\uff0c\u6839\u636e\u65f6\u6bb5\u6216\u4e00\u5b9a\u89c4\u5219\u5b89\u6392\u503c\u73ed\u4eba\u5458\uff0c\u6211\u7684\u7406\u89e3\u662f\u4e3b\u8981\u4ee5\u65f6\u95f4\u4e3a\u4e3b\u7ebf\u7684\u6392\u73ed\u7ba1\u7406\u3002 \u7528\u6237\u7ba1\u7406\uff0c\u5305\u62ec\uff1a\u8054\u7cfb\u65b9\u5f0f\uff0c\u65f6\u533a\uff0c\u8bed\u8a00\u7b49\u3002 \u62a5\u8b66\u6291\u5236\uff0c\u5206\u7ec4\uff0c\u9759\u9ed8\u529f\u80fd","title":"\u62a5\u8b66\u7cfb\u7edf\u5e94\u8be5\u5305\u542b\u529f\u80fd:"},{"location":"kubernetes/monitor/alert/#_3","text":"Pagerduty Opsgien ILert","title":"\u5546\u4e1a\u9009\u578b\uff1a"},{"location":"kubernetes/monitor/alert/#_4","text":"Alertmanager Zabbix","title":"\u5f00\u6e90\u9009\u578b:"},{"location":"kubernetes/monitor/alert/#_5","text":"\u5728\u9009\u62e9\u7684\u9053\u8def\u4e0a\u6ca1\u6709\u5bf9\u9519\u3002","title":"\u6211\u7684\u89c2\u70b9:"},{"location":"kubernetes/monitor/alert/#_6","text":"\u5916\u4f01Pagerduty\u7528\u7684\u6bd4\u8f83\u591a\u3002 OPsgien\u600e\u4e48\u8bf4\u5462Jira confluence \u4e00\u5bb6\u7684\u4ea7\u54c1\u4f18\u7f3a\u70b9\u81ea\u5df1\u54c1\u5427\u3002 ILert \u548c Pagerduty \u7c7b\u4f3c\uff0c\u4e2a\u4eba\u633a\u559c\u6b22","title":"\u5546\u4e1a\u65b9\u6848\u91cc\uff1a"},{"location":"kubernetes/monitor/alert/#_7","text":"Zabbix: \u4e2d\u5c0f\u578b\u516c\u53f8\u5728\u62a5\u8b66\u548c\u9875\u9762\u5c55\u793a\u65b9\u9762\u6211\u4e2a\u4eba\u86ee\u559c\u6b22\u7684\uff0c\u5f00\u53d1\u6210\u672c\u4f4e\uff0c\u6613\u7528\u6027\u8f83\u597d\uff0c\u4e0d\u8fc7\u4ee5\u670d\u52a1\u5668\u4e3a\u4e2d\u5fc3\u7684\u6982\u5ff5\u771f\u7684\u9700\u8981\u4f60\u81ea\u5df1\u770b\u662f\u5426\u80fd\u591f\u7406\u89e3\u548c\u59a5\u534f\uff0c\u672a\u6765\u6211\u4e5f\u4f1a\u5206\u4eab\u4e00\u4e2a\u57fa\u4e8eZabbix API\u7b80\u5316\u7684\u8fd0\u7ef4\u811a\u672c\u3002 Alertmanager \u65b9\u9762\u8fd8\u6709\u4e00\u4e9b\u529f\u80fd\u4e0a\u9700\u8981\u5176\u5b83\u7ec4\u4ef6\u914d\u5408\uff0c\u53ef\u4ee5\u8003\u8651\u6574\u5408\u5230\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\u3002","title":"\u5f00\u6e90\u65b9\u6848\u91cc\uff1a"},{"location":"kubernetes/monitor/metrics/","text":"\u603b\u7ed3 \u00b6 Node \u6307\u6807 \u00b6 Metrics Description More node_cpu_seconds_total Seconds the cpus spent in each mode understanding-machine-cpu-usage node_boot_time_seconds Node boot seconds node_netstat_Tcp_CurrEstab The number of TCP connections whose current status is ESTABLISHED or CLOSE-WAIT node_filesystem_free_bytes Represents the free space ignoring the reserved blocks filesystem-metrics-from-the-node-exporter node_load1 Node persecond Load_(computing) node_load5 Node per 5 seconds Load_(computing) node_load15 Node per 15 seconds Load_(computing) node_filefd_allocated File descriptor statistics: allocated file-descriptor-metrics node_memory_MemTotal_bytes Total memory node_memory_MemAvailable_bytes Available memory (After kernel 3.14) node_uname_info Same as use command uname node_timex_offset_seconds Time offset in between local system and reference clock node_sockstat_TCP_tw The number of something was up in relation to TCP sockets in the TIME_WAIT state analyse-a-metric-by-kernel-version node_sockstat_TCP_alloc The number of allocated (established, applied to sk_buff) TCP sockets node_sockstat_TCP_inuse The number of TCP sockets in use (listening) node_network_transmit_bytes_total Bandwidth usage which comes from the netdev module network-interface-metrics node_netstat_Tcp_PassiveOpens The number of TCP connections that have directly transitioned from the LISTEN state to the SYN-RCVD state node_netstat_Tcp_ActiveOpens Statistic TcpActiveOpens, the number of TCP connections that have directly transitioned from the CLOSED state to the SYN-SENT state node_disk_io_now The number of IOs in progress node_disk node_disk_read_time_seconds_total The total number of milliseconds spent by all reads node_disk node_disk_io_time_seconds_total Total seconds spent doing I/Os node_disk node_disk_written_bytes_total The total number of bytes written successfully node_disk node_disk_write_time_seconds_total This is the total number of seconds spent by all writes node_disk node_disk_writes_completed_total The total number of writes completed successfully node_disk node_disk_io_time_weighted_seconds_total The weighted number of seconds spent doing I/Os. iostats node_disk_reads_completed_total The iostat r/s is the number of reads per second calculated from the previous measurement iostat made (or since boot for the first one) node_disk node_disk_read_bytes_total The total number of bytes read successfully node_disk node_filesystem_readonly Indicates if the filesystem is readonly filesystem-metrics-from-the-node-exporter node_filesystem_size_bytes Total filesystem size filesystem-metrics-from-the-node-exporter node_filesystem_avail_bytes How many bytes are free for use by normal users. filesystem-metrics-from-the-node-exporter node_network_receive_bytes_total Bytes are the base unit Kube Metrics \u00b6 kube-state-metrics-github-docs Metrics Description kube_daemonset_created Unix creation timestamp kube_daemonset_status_current_number_scheduled The number of nodes running at least one daemon pod and are supposed to kube_daemonset_status_desired_number_scheduled The number of nodes that should be running the daemon pod kube_daemonset_status_number_available The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available kube_daemonset_status_number_misscheduled The number of nodes running a daemon pod but are not supposed to kube_daemonset_status_number_ready The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready kube_daemonset_updated_number_scheduled The total number of nodes that are running updated daemon pod kube_deployment_created Unix creation timestamp kube_deployment_metadata_generation Sequence number representing a specific generation of the desired state. kube_deployment_spec_replicas Number of desired pods for a deployment. kube_deployment_spec_strategy_rollingupdate_max_unavailable Maximum number of unavailable replicas during a rolling update of a deployment kube_deployment_status_observed_generation The generation observed by the deployment controller kube_deployment_status_replicas The number of updated replicas per deployment. kube_deployment_status_replicas_available The number of available replicas per deployment. kube_deployment_status_replicas_unavailable The number of unavailable replicas per deployment. kube_deployment_status_replicas_updated The number of updated replicas per deployment. kube_hpa_spec_max_replicas The max value of HPA kube_hpa_spec_min_replicas The min value of HPA kube_hpa_status_condition The condition of HPA kube_hpa_status_current_replicas The status of current replicas kube_hpa_status_desired_replicas The status of desired replicas kube_job_failed The job has failed its execution. kube_job_spec_completions The desired number of successfully finished pods the job should be run with kube_job_status_active The number of actively running pods. kube_job_status_failed The number of pods which reached Phase Failed and the reason for failure. kube_job_status_succeeded The number of pods which reached Phase Succeeded. kube_node_info Information about a cluster node kube_node_spec_taint The taint of a cluster node. kube_node_spec_unschedulable Whether a node can schedule new pods kube_node_status_allocatable_cpu_cores The allocatable cpu cores of a node that are available for scheduling kube_node_status_allocatable_memory_bytes The allocatable memory of a node that are available for scheduling kube_node_status_allocatable_pods The allocatable pods of a node that are available for scheduling kube_node_status_capacity_cpu_cores The cpu cores capacity of a node kube_node_status_capacity_memory_bytes The memory capacity of a node kube_node_status_capacity_pods The pods capacity of a node kube_node_status_condition The condition of a cluster node kube_persistentvolume_status_phase The phase indicates if a volume is available, bound to a claim, or released by a claim. kube_pod_container_info Information about a container in a pod. kube_pod_container_resource_limits_cpu_cores The number of cpu cores requested limit resource by a container. kube_pod_container_resource_limits_memory_bytes The number of memory requested limit resource by a container. kube_pod_container_resource_requests_cpu_cores The number of cpu requested resource by a container. kube_pod_container_resource_requests_memory_bytes The number of memory requested resource by a container. kube_pod_container_status_last_terminated_reason Describes the last reason the container was in terminated state kube_pod_container_status_restarts_total The number of container restarts per container kube_pod_container_status_running Describes whether the container is currently in running state kube_pod_container_status_terminated Describes whether the container is currently in terminated state kube_pod_container_status_terminated_reason Describes the reason the container is currently in terminated state kube_pod_container_status_waiting Describes whether the container is currently in waiting state kube_pod_container_status_waiting_reason Describes the reason the container is currently in waiting state kube_pod_info Information about pod kube_pod_labels Kubernetes labels converted to Prometheus labels kube_pod_owner Information about the Pod's owner kube_pod_status_phase The pods current phase kube_pod_status_ready Describes whether the pod is ready to serve requests kube_service_info Information about service Promtheus \u51fd\u6570\u4f7f\u7528 \u00b6 Function Description Example predict_linear \u9884\u6d4bGauge\u6307\u6807\u53d8\u5316\u8d8b\u52bf, \u53ef\u4ee5\u9884\u6d4b\u65f6\u95f4\u5e8f\u5217v\u5728t\u79d2\u540e\u7684\u503c\u3002\u5b83\u57fa\u4e8e\u7b80\u5355\u7ebf\u6027\u56de\u5f52\u7684\u65b9\u5f0f\uff0c\u5bf9\u65f6\u95f4\u7a97\u53e3\u5185\u7684\u6837\u672c\u6570\u636e\u8fdb\u884c\u7edf\u8ba1\uff0c\u4ece\u800c\u53ef\u4ee5\u5bf9\u65f6\u95f4\u5e8f\u5217\u7684\u53d8\u5316\u8d8b\u52bf\u505a\u51fa\u9884\u6d4b reduce-noise-from-disk-space-alerts increase \u83b7\u53d6\u533a\u95f4\u5411\u91cf\u4e2d\u7684\u7b2c\u4e00\u4e2a\u540e\u6700\u540e\u4e00\u4e2a\u6837\u672c\u5e76\u8fd4\u56de\u5176\u589e\u957f\u91cf increase(node_cpu[2m]) / 120 \u901a\u8fc7node_cpu[2m]\u83b7\u53d6\u65f6\u95f4\u5e8f\u5217\u6700\u8fd1\u4e24\u5206\u949f\u7684\u6240\u6709\u6837\u672c\uff0cincrease\u8ba1\u7b97\u51fa\u6700\u8fd1\u4e24\u5206\u949f\u7684\u589e\u957f\u91cf\uff0c\u6700\u540e\u9664\u4ee5\u65f6\u95f4120\u79d2\u5f97\u5230node_cpu\u6837\u672c\u5728\u6700\u8fd1\u4e24\u5206\u949f\u7684\u5e73\u5747\u589e\u957f\u7387 rate \u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u533a\u95f4\u5411\u91cfv\u5728\u65f6\u95f4\u7a97\u53e3\u5185\u5e73\u5747\u589e\u957f\u901f\u7387 rate(node_cpu[2m]) \u548cincrease \u8ba1\u7b97\u7684\u5e73\u5747\u589e\u957f\u7387\u76f8\u540c irate \u76f8\u6bd4\u4e8erate\u51fd\u6570\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7684\u7075\u654f\u5ea6, \u5f53\u9700\u8981\u5206\u6790\u957f\u671f\u8d8b\u52bf\u6216\u8005\u5728\u544a\u8b66\u89c4\u5219\u4e2d\uff0cirate\u7684\u8fd9\u79cd\u7075\u654f\u5ea6\u53cd\u800c\u5bb9\u6613\u9020\u6210\u5e72\u6270\u3002 irate(node_cpu[2m]) histogram_quantile \u7528\u4e8e\u8bc4\u5224\u5f53\u524d\u76d1\u63a7\u6307\u6807\u7684\u670d\u52a1\u6c34\u5e73\uff0c\u4ea7\u751fHistogram\u503c histogram_quantile(0.5, http_request_duration_seconds_bucket) Note rate \u548c increase \u51fd\u6570\u4e0d\u80fd\u53cd\u5e94\u5728\u65f6\u95f4\u7a97\u53e3\u5185\u7684\u5e73\u5747\u589e\u957f\u7387","title":"\u6307\u6807\u63cf\u8ff0"},{"location":"kubernetes/monitor/metrics/#_1","text":"","title":"\u603b\u7ed3"},{"location":"kubernetes/monitor/metrics/#node","text":"Metrics Description More node_cpu_seconds_total Seconds the cpus spent in each mode understanding-machine-cpu-usage node_boot_time_seconds Node boot seconds node_netstat_Tcp_CurrEstab The number of TCP connections whose current status is ESTABLISHED or CLOSE-WAIT node_filesystem_free_bytes Represents the free space ignoring the reserved blocks filesystem-metrics-from-the-node-exporter node_load1 Node persecond Load_(computing) node_load5 Node per 5 seconds Load_(computing) node_load15 Node per 15 seconds Load_(computing) node_filefd_allocated File descriptor statistics: allocated file-descriptor-metrics node_memory_MemTotal_bytes Total memory node_memory_MemAvailable_bytes Available memory (After kernel 3.14) node_uname_info Same as use command uname node_timex_offset_seconds Time offset in between local system and reference clock node_sockstat_TCP_tw The number of something was up in relation to TCP sockets in the TIME_WAIT state analyse-a-metric-by-kernel-version node_sockstat_TCP_alloc The number of allocated (established, applied to sk_buff) TCP sockets node_sockstat_TCP_inuse The number of TCP sockets in use (listening) node_network_transmit_bytes_total Bandwidth usage which comes from the netdev module network-interface-metrics node_netstat_Tcp_PassiveOpens The number of TCP connections that have directly transitioned from the LISTEN state to the SYN-RCVD state node_netstat_Tcp_ActiveOpens Statistic TcpActiveOpens, the number of TCP connections that have directly transitioned from the CLOSED state to the SYN-SENT state node_disk_io_now The number of IOs in progress node_disk node_disk_read_time_seconds_total The total number of milliseconds spent by all reads node_disk node_disk_io_time_seconds_total Total seconds spent doing I/Os node_disk node_disk_written_bytes_total The total number of bytes written successfully node_disk node_disk_write_time_seconds_total This is the total number of seconds spent by all writes node_disk node_disk_writes_completed_total The total number of writes completed successfully node_disk node_disk_io_time_weighted_seconds_total The weighted number of seconds spent doing I/Os. iostats node_disk_reads_completed_total The iostat r/s is the number of reads per second calculated from the previous measurement iostat made (or since boot for the first one) node_disk node_disk_read_bytes_total The total number of bytes read successfully node_disk node_filesystem_readonly Indicates if the filesystem is readonly filesystem-metrics-from-the-node-exporter node_filesystem_size_bytes Total filesystem size filesystem-metrics-from-the-node-exporter node_filesystem_avail_bytes How many bytes are free for use by normal users. filesystem-metrics-from-the-node-exporter node_network_receive_bytes_total Bytes are the base unit","title":"Node \u6307\u6807"},{"location":"kubernetes/monitor/metrics/#kube-metrics","text":"kube-state-metrics-github-docs Metrics Description kube_daemonset_created Unix creation timestamp kube_daemonset_status_current_number_scheduled The number of nodes running at least one daemon pod and are supposed to kube_daemonset_status_desired_number_scheduled The number of nodes that should be running the daemon pod kube_daemonset_status_number_available The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available kube_daemonset_status_number_misscheduled The number of nodes running a daemon pod but are not supposed to kube_daemonset_status_number_ready The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready kube_daemonset_updated_number_scheduled The total number of nodes that are running updated daemon pod kube_deployment_created Unix creation timestamp kube_deployment_metadata_generation Sequence number representing a specific generation of the desired state. kube_deployment_spec_replicas Number of desired pods for a deployment. kube_deployment_spec_strategy_rollingupdate_max_unavailable Maximum number of unavailable replicas during a rolling update of a deployment kube_deployment_status_observed_generation The generation observed by the deployment controller kube_deployment_status_replicas The number of updated replicas per deployment. kube_deployment_status_replicas_available The number of available replicas per deployment. kube_deployment_status_replicas_unavailable The number of unavailable replicas per deployment. kube_deployment_status_replicas_updated The number of updated replicas per deployment. kube_hpa_spec_max_replicas The max value of HPA kube_hpa_spec_min_replicas The min value of HPA kube_hpa_status_condition The condition of HPA kube_hpa_status_current_replicas The status of current replicas kube_hpa_status_desired_replicas The status of desired replicas kube_job_failed The job has failed its execution. kube_job_spec_completions The desired number of successfully finished pods the job should be run with kube_job_status_active The number of actively running pods. kube_job_status_failed The number of pods which reached Phase Failed and the reason for failure. kube_job_status_succeeded The number of pods which reached Phase Succeeded. kube_node_info Information about a cluster node kube_node_spec_taint The taint of a cluster node. kube_node_spec_unschedulable Whether a node can schedule new pods kube_node_status_allocatable_cpu_cores The allocatable cpu cores of a node that are available for scheduling kube_node_status_allocatable_memory_bytes The allocatable memory of a node that are available for scheduling kube_node_status_allocatable_pods The allocatable pods of a node that are available for scheduling kube_node_status_capacity_cpu_cores The cpu cores capacity of a node kube_node_status_capacity_memory_bytes The memory capacity of a node kube_node_status_capacity_pods The pods capacity of a node kube_node_status_condition The condition of a cluster node kube_persistentvolume_status_phase The phase indicates if a volume is available, bound to a claim, or released by a claim. kube_pod_container_info Information about a container in a pod. kube_pod_container_resource_limits_cpu_cores The number of cpu cores requested limit resource by a container. kube_pod_container_resource_limits_memory_bytes The number of memory requested limit resource by a container. kube_pod_container_resource_requests_cpu_cores The number of cpu requested resource by a container. kube_pod_container_resource_requests_memory_bytes The number of memory requested resource by a container. kube_pod_container_status_last_terminated_reason Describes the last reason the container was in terminated state kube_pod_container_status_restarts_total The number of container restarts per container kube_pod_container_status_running Describes whether the container is currently in running state kube_pod_container_status_terminated Describes whether the container is currently in terminated state kube_pod_container_status_terminated_reason Describes the reason the container is currently in terminated state kube_pod_container_status_waiting Describes whether the container is currently in waiting state kube_pod_container_status_waiting_reason Describes the reason the container is currently in waiting state kube_pod_info Information about pod kube_pod_labels Kubernetes labels converted to Prometheus labels kube_pod_owner Information about the Pod's owner kube_pod_status_phase The pods current phase kube_pod_status_ready Describes whether the pod is ready to serve requests kube_service_info Information about service","title":"Kube Metrics"},{"location":"kubernetes/monitor/metrics/#promtheus","text":"Function Description Example predict_linear \u9884\u6d4bGauge\u6307\u6807\u53d8\u5316\u8d8b\u52bf, \u53ef\u4ee5\u9884\u6d4b\u65f6\u95f4\u5e8f\u5217v\u5728t\u79d2\u540e\u7684\u503c\u3002\u5b83\u57fa\u4e8e\u7b80\u5355\u7ebf\u6027\u56de\u5f52\u7684\u65b9\u5f0f\uff0c\u5bf9\u65f6\u95f4\u7a97\u53e3\u5185\u7684\u6837\u672c\u6570\u636e\u8fdb\u884c\u7edf\u8ba1\uff0c\u4ece\u800c\u53ef\u4ee5\u5bf9\u65f6\u95f4\u5e8f\u5217\u7684\u53d8\u5316\u8d8b\u52bf\u505a\u51fa\u9884\u6d4b reduce-noise-from-disk-space-alerts increase \u83b7\u53d6\u533a\u95f4\u5411\u91cf\u4e2d\u7684\u7b2c\u4e00\u4e2a\u540e\u6700\u540e\u4e00\u4e2a\u6837\u672c\u5e76\u8fd4\u56de\u5176\u589e\u957f\u91cf increase(node_cpu[2m]) / 120 \u901a\u8fc7node_cpu[2m]\u83b7\u53d6\u65f6\u95f4\u5e8f\u5217\u6700\u8fd1\u4e24\u5206\u949f\u7684\u6240\u6709\u6837\u672c\uff0cincrease\u8ba1\u7b97\u51fa\u6700\u8fd1\u4e24\u5206\u949f\u7684\u589e\u957f\u91cf\uff0c\u6700\u540e\u9664\u4ee5\u65f6\u95f4120\u79d2\u5f97\u5230node_cpu\u6837\u672c\u5728\u6700\u8fd1\u4e24\u5206\u949f\u7684\u5e73\u5747\u589e\u957f\u7387 rate \u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u533a\u95f4\u5411\u91cfv\u5728\u65f6\u95f4\u7a97\u53e3\u5185\u5e73\u5747\u589e\u957f\u901f\u7387 rate(node_cpu[2m]) \u548cincrease \u8ba1\u7b97\u7684\u5e73\u5747\u589e\u957f\u7387\u76f8\u540c irate \u76f8\u6bd4\u4e8erate\u51fd\u6570\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7684\u7075\u654f\u5ea6, \u5f53\u9700\u8981\u5206\u6790\u957f\u671f\u8d8b\u52bf\u6216\u8005\u5728\u544a\u8b66\u89c4\u5219\u4e2d\uff0cirate\u7684\u8fd9\u79cd\u7075\u654f\u5ea6\u53cd\u800c\u5bb9\u6613\u9020\u6210\u5e72\u6270\u3002 irate(node_cpu[2m]) histogram_quantile \u7528\u4e8e\u8bc4\u5224\u5f53\u524d\u76d1\u63a7\u6307\u6807\u7684\u670d\u52a1\u6c34\u5e73\uff0c\u4ea7\u751fHistogram\u503c histogram_quantile(0.5, http_request_duration_seconds_bucket) Note rate \u548c increase \u51fd\u6570\u4e0d\u80fd\u53cd\u5e94\u5728\u65f6\u95f4\u7a97\u53e3\u5185\u7684\u5e73\u5747\u589e\u957f\u7387","title":"Promtheus \u51fd\u6570\u4f7f\u7528"},{"location":"kubernetes/monitor/solutions/","text":"\u76d1\u63a7\u65b9\u6848\u9009\u578b\uff08\u57fa\u7840\u8bbe\u65bd\u6784\u5efa Kubernetes \u4e4b\u4e0a\uff09 \u00b6 \u57fa\u4e8e\u793e\u533a\u7684 Prometheus Operator \u00b6 \u793e\u533a\u7684 Prometheus Opertator \u7b97\u7684\u4e0a\u662f\u5f00\u7bb1\u5373\u7528\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u540c\u65f6\u63d0\u4f9b\u4e86 Thonas \u7684\u65b9\u6848\u652f\u6301\uff0c\u4f18\u70b9\u81ea\u4e0d\u7528\u8bf4\uff0c\u81ea\u884c google \u6709\u5f88\u591a\u6587\u7ae0\u4e86\uff0c\u7b80\u5355\u8bf4\u70b9\u81ea\u5df1\u4f7f\u7528\u4e0a\u4e0d\u662f\u90a3\u4e48\u723d\u7684\u5730\u65b9: \u9700\u8981\u5177\u5907 Jsonnet \u7684\u57fa\u672c\u77e5\u8bc6\uff0c\u6709\u65b0\u8bed\u6cd5\u5b66\u4e60\u7684\u95e8\u69db\u3002 \u9ed8\u8ba4\u751f\u6210\u7684 manifests \u6ca1\u6709\u6309\u7167 component \u7684\u65b9\u5f0f\u5f52\u7c7b\uff0c\u8fd9\u5c31\u4e0d\u5229\u4e8e\u5165\u95e8\u7684\u5b66\u4e60\u3002 \u4f7f\u7528\u524d\u9700\u8981\u5177\u5907\u54ea\u4e9b\u57fa\u7840: \u00b6 \u7406\u89e3 Kubernetes Operator \u3002 \u7406\u89e3 Prometheus \u7684\u6574\u5957\u4f53\u7cfb\u3002 \u5982\u4e0a\u6240\u5c5e\uff0c\u8981\u6709 Jsonnet \u7684\u57fa\u672c\u77e5\u8bc6\u3002 \u5982\u679c\u9009\u578b Thonas \u81f3\u5c11\u8981\u5177\u5907\u8be5\u65b9\u6848\u7684\u57fa\u672c\u77e5\u8bc6\u3002 \u963f\u91cc\u4e91\u76d1\u63a7\u57fa\u7840\u8bbe\u65bd \u00b6 Prometheus \u5927\u89c4\u6a21\u5e94\u7528\u4e0b\u5b58\u50a8\u548c\u8ba1\u7b97\u662f\u5728\u505a HA \u8981\u8003\u8651\u7684\u4e24\u4e2a\u65b9\u9762\uff0c\u57fa\u4e8e\u963f\u91cc\u4e91\u7684\u57fa\u7840\u8bbe\u65bd\u6211\u5c1d\u8bd5\u8fc7\u4e24\u4e2a\u4ea7\u54c1: \u57fa\u4e8e\u963f\u91cc\u4e91\u7684 SLS metric store \u00b6 \u6587\u7ae0\u53ef\u4ee5\u53c2\u8003: \u9ad8\u6027\u80fd\u3001\u9ad8\u53ef\u7528\u3001\u514d\u8fd0\u7ef4-\u4e91\u539f\u751fPrometheus\u65b9\u6848\u4e0e\u5b9e\u8df5 . \u57fa\u4e8e\u963f\u91cc\u4e91\u7684 Arms Prometheus \u00b6 \u8fd9\u6b3e\u4ea7\u54c1\u7b97\u662f\u4e13\u95e8\u9488\u5bf9\u6258\u7ba1 Kubernetes \u96c6\u7fa4\uff08\u5f53\u7136\u81ea\u5efa\u4e5f\u53ef\u4ee5\u7528\uff0c\u8fd9\u4e2a\u90e8\u5206\u5c31\u8bf7\u79fb\u6b65\u5230\u5176\u5b98\u65b9\u6587\u6863\u7684\u5efa\u8bae\u65b9\u5f0f\u4e86\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8bb0\u5f55\u4e86\uff09\u642d\u914d\u7684\u76d1\u63a7\u65b9\u6848\u4e4b\u4e00\uff0c\u5bf9\u4e8e\u6700\u7ec8\u7528\u6237\u4f53\u9a8c\u4e0a\u548c\u793e\u533a\u7684 Prometheus Operator \u4e00\u6837\uff0c\u5728\u6307\u6807\u7684\u6536\u96c6\u6d4b\u63d0\u4f9b\u4e86\u76f8\u540c\u7684\u7075\u6d3b\u6027\uff0c\u5728\u62a5\u8b66\u6d3e\u53d1\u65b9\u9762\u4e5f\u63d0\u4f9b\u4e86Webhook\u7684\u65b9\u5f0f\u63d0\u4f9b\u53ef\u6269\u5c55\u6027\u3002 \u4f18\u70b9: \u00b6 \u6709\u4e86\u90e8\u5206\u5b98\u65b9\u63d0\u4f9b\u7684\u5e38\u7528\u7684\u4ea7\u54c1\u6307\u6807\u6536\u96c6\u65b9\u6848\u7ec4\u4ef6\uff0c\u57fa\u4e8e\u793e\u533a\u7684\u548c\u57fa\u4e8e\u963f\u91cc\u4e91CMS\u7684\u6307\u6807\u6536\u96c6\u3002 \u96c6\u6210\u4e86\u9ed8\u8ba4\u7684\u76d1\u63a7 dashboard\u3002 \u8bf4\u8bf4\u4e0d\u8db3: \u00b6 \u5bf9\u6807 SLS \u8fd9\u7c7b\u4ea7\u54c1 Arms Prometheus \u7ed9\u6211\u7684\u611f\u89c9\u8fd8\u8fdc\u6ca1\u6709\u8fdb\u5165\u6210\u719f\u533a\u3002 \u5b89\u5168\u548c\u6613\u7528\u6027\u7740\u5b9e\u6709\u5f85\u63d0\u9ad8\uff0c Prometheus Console \u6709\u5f88\u591a\u8ba9\u4eba\u56f0\u60d1\u7684\u83dc\u5355\uff0c\u76ee\u524d\u4e5f\u7f3a\u5c11\u5b98\u65b9SDK/API\u7684\u652f\u6301\u3002 \u5b8c\u5168\u81ea\u5efa\u8981\u8003\u8651\u54ea\u4e9b\u70b9 \u00b6 \u76d1\u63a7\u7684\u6574\u4e2a\u6d41\u7a0b\u65e0\u5916\u4e4e: \u6307\u6807\u6536\u96c6 -> \u5b58\u50a8 -> \u8ba1\u7b97 -> \u89e6\u53d1 -> \u5206\u6d3e Prometheus \u672c\u8eab\u7684\u52a3\u52bf\u662f\u5355\u70b9\u5728\u5927\u89c4\u6a21\u6307\u6807\u6536\u96c6\u4e0a\u7684\u5b58\u50a8\u548c\u57fa\u4e8e\u89c4\u5219\u7684\u8ba1\u7b97\u662f\u4e2a\u6bd4\u8f83\u5927\u7684\u6311\u6218\uff0c\u90a3\u4e48\u9996\u5148\u8981\u89e3\u51b3\u7684\u662f\u5b58\u50a8\u7684\u53ef\u6269\u5c55\u6027\u548c\u8ba1\u7b97\u7684\u5185\u5b58\u4f7f\u7528\u5e73\u8861\u95ee\u9898\u3002 \u5b58\u50a8\u7684\u65b9\u6848\u6bd4\u8f83\u5bb9\u6613 google \u5230\u7684\u6709: Thonas, InfluxDB\uff0cVictoriaMetrics ... (\u5176\u5b83\u80fd\u529b\u6709\u9650\u6ca1\u6709\u7814\u7a76\u8fc7\u4e86\u5c31) \u8ba1\u7b97\u65b9\u9762\u6211\u7684\u89e3\u51b3\u65b9\u6848: \u6307\u6807\u5207\u7247\u548c\u8bfb\u5199\u5206\u79bb\u5728\u67b6\u6784\u4e0a\u5207\u5206\uff0c\u8fd9\u70b9 Arms Prometheus \u7684\u67b6\u6784\u5c31\u5f88\u6709\u53c2\u8003\u610f\u4e49\u3002 Note \u5bf9\u4e8e\u8fd0\u7ef4\u4eba\u624b\u6709\u9650\uff0c\u89c4\u6a21\u4e0d\u5927\u7684\u56e2\u961f\u8fd8\u662f\u5efa\u8bae\u4f18\u9009\u5229\u7528\u4e91\u5382\u5546\u63d0\u4f9b\u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u6bd5\u7adf\u65e0\u8bba\u7528\u4ec0\u4e48\u65b9\u6848\u90fd\u8981\u8003\u8651\u8fd0\u7ef4\u6210\u672c\u3002 \u6709\u94b1\u6709\u4eba\u5f53\u7136\u6298\u817e\u6298\u817e\u6700\u80fd\u63d0\u5347\u80fd\u529b\u3002 \u53ef\u89c2\u6d4b\u6027\u76d1\u63a7\u65b9\u6cd5 \u00b6 USE \u65b9\u6cd5 \u00b6 Utilization \u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\uff0c\u901a\u5e38\u4ee5\u4e00\u4e2a\u65f6\u95f4\u6bb5\u7684\u767e\u5206\u6bd4\u8868\u793a\uff0c\u5982\u6700\u8fd1\u4e00\u5206\u949f\u5185\u5b58\u7684\u5e73\u5747\u4f7f\u7528\u7387\u662f 90%\u3002\u5f88\u9ad8\u7684\u4f7f\u7528\u7387\u5f80\u5f80\u662f\u7cfb\u7edf\u6027\u80fd\u74f6\u9888\u7684\u6807\u5fd7\u3002 Saturation \u8d44\u6e90\u7684\u8d85\u8f7d\u7a0b\u5ea6\uff0c\u5f97\u4e0d\u5230\u8d44\u6e90\u7684\u4efb\u52a1\u901a\u5e38\u4f1a\u88ab\u653e\u5165\u961f\u5217\uff0c\u56e0\u6b64\u53ef\u7528\u961f\u5217\u957f\u5ea6\u6216\u6392\u961f\u65f6\u95f4\u6765\u5ea6\u91cf\u3002 Errors \u9519\u8bef\u4e8b\u4ef6\u7684\u4e2a\u6570\uff0c\u5f53\u9519\u8bef\u6301\u7eed\u53d1\u751f\u4ece\u800c\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d\u65f6\u9700\u8981\u7279\u522b\u5173\u6ce8\u3002 \u57fa\u4e8e\u4e0a\u8ff0\u6307\u6807\u5e76\u7ed3\u5408 USE \u63d0\u4f9b\u7684\u7b56\u7565\uff0c\u6211\u4eec\u80fd\u5feb\u901f\u5b9a\u4f4d\u5e38\u89c1\u7684\u6027\u80fd\u95ee\u9898\u3002 RED \u65b9\u6cd5 \u00b6 (Request) Rate - \u6bcf\u79d2\u5904\u7406\u7684\u8bf7\u6c42\u6570\u91cf\u3002 (Request) Errors - \u6bcf\u79d2\u5931\u8d25\u7684\u8bf7\u6c42\u6570\u91cf\u3002 (Request) Duration - \u8bf7\u6c42\u5904\u7406\u65f6\u95f4\u7684\u5206\u5e03\u3002 \u4e0a\u8ff0\u6307\u6807\u80fd\u8ba9\u6211\u4eec\u6e05\u695a\u5730\u611f\u77e5\u5fae\u670d\u52a1\u5e94\u7528\u7684\u8fd0\u884c\u72b6\u51b5\uff0c\u5e76\u80fd\u5e2e\u52a9\u8861\u91cf\u7ec8\u7aef\u7528\u6237\u7684\u4f53\u9a8c\u95ee\u9898\u3002 \u5173\u952e\u6307\u6807\u5b9a\u4e49\u6982\u5ff5 \u00b6 SLA: \u670d\u52a1\u7ea7\u522b\u534f\u8bae\uff0c\u5e73\u53f0\u4e0e\u5ba2\u6237\u4e4b\u95f4\u5173\u4e8e\u53ef\u8861\u91cf\u6307\u6807\u7684\u534f\u8bae\u3002 SLI: \u670d\u52a1\u6c34\u5e73\u6307\u6807\uff0c\u5e73\u53f0\u6b63\u5e38\u8fd0\u884c\u5404\u9879\u6307\u6807\u7684\u5b9e\u9645\u8861\u91cf\uff0c\u662f\u5e73\u53f0\u670d\u52a1\u7684\u771f\u662f\u53cd\u5e94\u3002SLI \u5fc5\u987b\u8fbe\u5230\u6216\u8d85\u8fc7\u4e0e\u5ba2\u6237\u7684 SLA \u627f\u8bfa\u3002 SLO: \u670d\u52a1\u6c34\u5e73\u76ee\u6807\uff0c\u662f\u670d\u52a1\u7531 SLI \u6d4b\u91cf\u51fa\u7684\u76ee\u6807\u503c\u6216\u76ee\u6807\u8303\u56f4\u3002SLO\u662f\u5e73\u53f0 DevOps \u56e2\u961f\u4e3a\u4e86\u6ee1\u8db3 SLA \u7ed9\u81ea\u5df1\u5236\u5b9a\u7684\u9700\u8981\u8fbe\u5230\u7684\u76ee\u6807\u3002 \u53c2\u8003 \u00b6 Kubernetes \u5e94\u7528\u53d1\u5e03\u4e0e\u76d1\u63a7\u8054\u52a8","title":"\u65b9\u6848\u8bb0\u5f55"},{"location":"kubernetes/monitor/solutions/#kubernetes","text":"","title":"\u76d1\u63a7\u65b9\u6848\u9009\u578b\uff08\u57fa\u7840\u8bbe\u65bd\u6784\u5efa Kubernetes \u4e4b\u4e0a\uff09"},{"location":"kubernetes/monitor/solutions/#prometheus-operator","text":"\u793e\u533a\u7684 Prometheus Opertator \u7b97\u7684\u4e0a\u662f\u5f00\u7bb1\u5373\u7528\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u540c\u65f6\u63d0\u4f9b\u4e86 Thonas \u7684\u65b9\u6848\u652f\u6301\uff0c\u4f18\u70b9\u81ea\u4e0d\u7528\u8bf4\uff0c\u81ea\u884c google \u6709\u5f88\u591a\u6587\u7ae0\u4e86\uff0c\u7b80\u5355\u8bf4\u70b9\u81ea\u5df1\u4f7f\u7528\u4e0a\u4e0d\u662f\u90a3\u4e48\u723d\u7684\u5730\u65b9: \u9700\u8981\u5177\u5907 Jsonnet \u7684\u57fa\u672c\u77e5\u8bc6\uff0c\u6709\u65b0\u8bed\u6cd5\u5b66\u4e60\u7684\u95e8\u69db\u3002 \u9ed8\u8ba4\u751f\u6210\u7684 manifests \u6ca1\u6709\u6309\u7167 component \u7684\u65b9\u5f0f\u5f52\u7c7b\uff0c\u8fd9\u5c31\u4e0d\u5229\u4e8e\u5165\u95e8\u7684\u5b66\u4e60\u3002","title":"\u57fa\u4e8e\u793e\u533a\u7684 Prometheus Operator"},{"location":"kubernetes/monitor/solutions/#_1","text":"\u7406\u89e3 Kubernetes Operator \u3002 \u7406\u89e3 Prometheus \u7684\u6574\u5957\u4f53\u7cfb\u3002 \u5982\u4e0a\u6240\u5c5e\uff0c\u8981\u6709 Jsonnet \u7684\u57fa\u672c\u77e5\u8bc6\u3002 \u5982\u679c\u9009\u578b Thonas \u81f3\u5c11\u8981\u5177\u5907\u8be5\u65b9\u6848\u7684\u57fa\u672c\u77e5\u8bc6\u3002","title":"\u4f7f\u7528\u524d\u9700\u8981\u5177\u5907\u54ea\u4e9b\u57fa\u7840:"},{"location":"kubernetes/monitor/solutions/#_2","text":"Prometheus \u5927\u89c4\u6a21\u5e94\u7528\u4e0b\u5b58\u50a8\u548c\u8ba1\u7b97\u662f\u5728\u505a HA \u8981\u8003\u8651\u7684\u4e24\u4e2a\u65b9\u9762\uff0c\u57fa\u4e8e\u963f\u91cc\u4e91\u7684\u57fa\u7840\u8bbe\u65bd\u6211\u5c1d\u8bd5\u8fc7\u4e24\u4e2a\u4ea7\u54c1:","title":"\u963f\u91cc\u4e91\u76d1\u63a7\u57fa\u7840\u8bbe\u65bd"},{"location":"kubernetes/monitor/solutions/#sls-metric-store","text":"\u6587\u7ae0\u53ef\u4ee5\u53c2\u8003: \u9ad8\u6027\u80fd\u3001\u9ad8\u53ef\u7528\u3001\u514d\u8fd0\u7ef4-\u4e91\u539f\u751fPrometheus\u65b9\u6848\u4e0e\u5b9e\u8df5 .","title":"\u57fa\u4e8e\u963f\u91cc\u4e91\u7684 SLS metric store"},{"location":"kubernetes/monitor/solutions/#arms-prometheus","text":"\u8fd9\u6b3e\u4ea7\u54c1\u7b97\u662f\u4e13\u95e8\u9488\u5bf9\u6258\u7ba1 Kubernetes \u96c6\u7fa4\uff08\u5f53\u7136\u81ea\u5efa\u4e5f\u53ef\u4ee5\u7528\uff0c\u8fd9\u4e2a\u90e8\u5206\u5c31\u8bf7\u79fb\u6b65\u5230\u5176\u5b98\u65b9\u6587\u6863\u7684\u5efa\u8bae\u65b9\u5f0f\u4e86\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8bb0\u5f55\u4e86\uff09\u642d\u914d\u7684\u76d1\u63a7\u65b9\u6848\u4e4b\u4e00\uff0c\u5bf9\u4e8e\u6700\u7ec8\u7528\u6237\u4f53\u9a8c\u4e0a\u548c\u793e\u533a\u7684 Prometheus Operator \u4e00\u6837\uff0c\u5728\u6307\u6807\u7684\u6536\u96c6\u6d4b\u63d0\u4f9b\u4e86\u76f8\u540c\u7684\u7075\u6d3b\u6027\uff0c\u5728\u62a5\u8b66\u6d3e\u53d1\u65b9\u9762\u4e5f\u63d0\u4f9b\u4e86Webhook\u7684\u65b9\u5f0f\u63d0\u4f9b\u53ef\u6269\u5c55\u6027\u3002","title":"\u57fa\u4e8e\u963f\u91cc\u4e91\u7684 Arms Prometheus"},{"location":"kubernetes/monitor/solutions/#_3","text":"\u6709\u4e86\u90e8\u5206\u5b98\u65b9\u63d0\u4f9b\u7684\u5e38\u7528\u7684\u4ea7\u54c1\u6307\u6807\u6536\u96c6\u65b9\u6848\u7ec4\u4ef6\uff0c\u57fa\u4e8e\u793e\u533a\u7684\u548c\u57fa\u4e8e\u963f\u91cc\u4e91CMS\u7684\u6307\u6807\u6536\u96c6\u3002 \u96c6\u6210\u4e86\u9ed8\u8ba4\u7684\u76d1\u63a7 dashboard\u3002","title":"\u4f18\u70b9:"},{"location":"kubernetes/monitor/solutions/#_4","text":"\u5bf9\u6807 SLS \u8fd9\u7c7b\u4ea7\u54c1 Arms Prometheus \u7ed9\u6211\u7684\u611f\u89c9\u8fd8\u8fdc\u6ca1\u6709\u8fdb\u5165\u6210\u719f\u533a\u3002 \u5b89\u5168\u548c\u6613\u7528\u6027\u7740\u5b9e\u6709\u5f85\u63d0\u9ad8\uff0c Prometheus Console \u6709\u5f88\u591a\u8ba9\u4eba\u56f0\u60d1\u7684\u83dc\u5355\uff0c\u76ee\u524d\u4e5f\u7f3a\u5c11\u5b98\u65b9SDK/API\u7684\u652f\u6301\u3002","title":"\u8bf4\u8bf4\u4e0d\u8db3:"},{"location":"kubernetes/monitor/solutions/#_5","text":"\u76d1\u63a7\u7684\u6574\u4e2a\u6d41\u7a0b\u65e0\u5916\u4e4e: \u6307\u6807\u6536\u96c6 -> \u5b58\u50a8 -> \u8ba1\u7b97 -> \u89e6\u53d1 -> \u5206\u6d3e Prometheus \u672c\u8eab\u7684\u52a3\u52bf\u662f\u5355\u70b9\u5728\u5927\u89c4\u6a21\u6307\u6807\u6536\u96c6\u4e0a\u7684\u5b58\u50a8\u548c\u57fa\u4e8e\u89c4\u5219\u7684\u8ba1\u7b97\u662f\u4e2a\u6bd4\u8f83\u5927\u7684\u6311\u6218\uff0c\u90a3\u4e48\u9996\u5148\u8981\u89e3\u51b3\u7684\u662f\u5b58\u50a8\u7684\u53ef\u6269\u5c55\u6027\u548c\u8ba1\u7b97\u7684\u5185\u5b58\u4f7f\u7528\u5e73\u8861\u95ee\u9898\u3002 \u5b58\u50a8\u7684\u65b9\u6848\u6bd4\u8f83\u5bb9\u6613 google \u5230\u7684\u6709: Thonas, InfluxDB\uff0cVictoriaMetrics ... (\u5176\u5b83\u80fd\u529b\u6709\u9650\u6ca1\u6709\u7814\u7a76\u8fc7\u4e86\u5c31) \u8ba1\u7b97\u65b9\u9762\u6211\u7684\u89e3\u51b3\u65b9\u6848: \u6307\u6807\u5207\u7247\u548c\u8bfb\u5199\u5206\u79bb\u5728\u67b6\u6784\u4e0a\u5207\u5206\uff0c\u8fd9\u70b9 Arms Prometheus \u7684\u67b6\u6784\u5c31\u5f88\u6709\u53c2\u8003\u610f\u4e49\u3002 Note \u5bf9\u4e8e\u8fd0\u7ef4\u4eba\u624b\u6709\u9650\uff0c\u89c4\u6a21\u4e0d\u5927\u7684\u56e2\u961f\u8fd8\u662f\u5efa\u8bae\u4f18\u9009\u5229\u7528\u4e91\u5382\u5546\u63d0\u4f9b\u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u6bd5\u7adf\u65e0\u8bba\u7528\u4ec0\u4e48\u65b9\u6848\u90fd\u8981\u8003\u8651\u8fd0\u7ef4\u6210\u672c\u3002 \u6709\u94b1\u6709\u4eba\u5f53\u7136\u6298\u817e\u6298\u817e\u6700\u80fd\u63d0\u5347\u80fd\u529b\u3002","title":"\u5b8c\u5168\u81ea\u5efa\u8981\u8003\u8651\u54ea\u4e9b\u70b9"},{"location":"kubernetes/monitor/solutions/#_6","text":"","title":"\u53ef\u89c2\u6d4b\u6027\u76d1\u63a7\u65b9\u6cd5"},{"location":"kubernetes/monitor/solutions/#use","text":"Utilization \u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\uff0c\u901a\u5e38\u4ee5\u4e00\u4e2a\u65f6\u95f4\u6bb5\u7684\u767e\u5206\u6bd4\u8868\u793a\uff0c\u5982\u6700\u8fd1\u4e00\u5206\u949f\u5185\u5b58\u7684\u5e73\u5747\u4f7f\u7528\u7387\u662f 90%\u3002\u5f88\u9ad8\u7684\u4f7f\u7528\u7387\u5f80\u5f80\u662f\u7cfb\u7edf\u6027\u80fd\u74f6\u9888\u7684\u6807\u5fd7\u3002 Saturation \u8d44\u6e90\u7684\u8d85\u8f7d\u7a0b\u5ea6\uff0c\u5f97\u4e0d\u5230\u8d44\u6e90\u7684\u4efb\u52a1\u901a\u5e38\u4f1a\u88ab\u653e\u5165\u961f\u5217\uff0c\u56e0\u6b64\u53ef\u7528\u961f\u5217\u957f\u5ea6\u6216\u6392\u961f\u65f6\u95f4\u6765\u5ea6\u91cf\u3002 Errors \u9519\u8bef\u4e8b\u4ef6\u7684\u4e2a\u6570\uff0c\u5f53\u9519\u8bef\u6301\u7eed\u53d1\u751f\u4ece\u800c\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d\u65f6\u9700\u8981\u7279\u522b\u5173\u6ce8\u3002 \u57fa\u4e8e\u4e0a\u8ff0\u6307\u6807\u5e76\u7ed3\u5408 USE \u63d0\u4f9b\u7684\u7b56\u7565\uff0c\u6211\u4eec\u80fd\u5feb\u901f\u5b9a\u4f4d\u5e38\u89c1\u7684\u6027\u80fd\u95ee\u9898\u3002","title":"USE \u65b9\u6cd5"},{"location":"kubernetes/monitor/solutions/#red","text":"(Request) Rate - \u6bcf\u79d2\u5904\u7406\u7684\u8bf7\u6c42\u6570\u91cf\u3002 (Request) Errors - \u6bcf\u79d2\u5931\u8d25\u7684\u8bf7\u6c42\u6570\u91cf\u3002 (Request) Duration - \u8bf7\u6c42\u5904\u7406\u65f6\u95f4\u7684\u5206\u5e03\u3002 \u4e0a\u8ff0\u6307\u6807\u80fd\u8ba9\u6211\u4eec\u6e05\u695a\u5730\u611f\u77e5\u5fae\u670d\u52a1\u5e94\u7528\u7684\u8fd0\u884c\u72b6\u51b5\uff0c\u5e76\u80fd\u5e2e\u52a9\u8861\u91cf\u7ec8\u7aef\u7528\u6237\u7684\u4f53\u9a8c\u95ee\u9898\u3002","title":"RED \u65b9\u6cd5"},{"location":"kubernetes/monitor/solutions/#_7","text":"SLA: \u670d\u52a1\u7ea7\u522b\u534f\u8bae\uff0c\u5e73\u53f0\u4e0e\u5ba2\u6237\u4e4b\u95f4\u5173\u4e8e\u53ef\u8861\u91cf\u6307\u6807\u7684\u534f\u8bae\u3002 SLI: \u670d\u52a1\u6c34\u5e73\u6307\u6807\uff0c\u5e73\u53f0\u6b63\u5e38\u8fd0\u884c\u5404\u9879\u6307\u6807\u7684\u5b9e\u9645\u8861\u91cf\uff0c\u662f\u5e73\u53f0\u670d\u52a1\u7684\u771f\u662f\u53cd\u5e94\u3002SLI \u5fc5\u987b\u8fbe\u5230\u6216\u8d85\u8fc7\u4e0e\u5ba2\u6237\u7684 SLA \u627f\u8bfa\u3002 SLO: \u670d\u52a1\u6c34\u5e73\u76ee\u6807\uff0c\u662f\u670d\u52a1\u7531 SLI \u6d4b\u91cf\u51fa\u7684\u76ee\u6807\u503c\u6216\u76ee\u6807\u8303\u56f4\u3002SLO\u662f\u5e73\u53f0 DevOps \u56e2\u961f\u4e3a\u4e86\u6ee1\u8db3 SLA \u7ed9\u81ea\u5df1\u5236\u5b9a\u7684\u9700\u8981\u8fbe\u5230\u7684\u76ee\u6807\u3002","title":"\u5173\u952e\u6307\u6807\u5b9a\u4e49\u6982\u5ff5"},{"location":"kubernetes/monitor/solutions/#_8","text":"Kubernetes \u5e94\u7528\u53d1\u5e03\u4e0e\u76d1\u63a7\u8054\u52a8","title":"\u53c2\u8003"},{"location":"kubernetes/operator/","text":"Overview \u00b6","title":"Opertor"},{"location":"kubernetes/operator/#overview","text":"","title":"Overview"},{"location":"public-cloud/","text":"Overview \u00b6","title":"Azure"},{"location":"public-cloud/#overview","text":"","title":"Overview"},{"location":"public-cloud/alicloud_ingress/","text":"Ingress \u90e8\u7f72\u89c4\u5212 \u00b6 \u57fa\u672c\u6982\u5ff5 \u00b6 Kubernetes\u4e2dService, Ingress, Ingress Controller\u7684\u5173\u7cfb \u00b6 Service: \u540e\u7aef\u670d\u52a1\u7684\u62bd\u8c61\u3002 Ingress: \u53cd\u5411\u4ee3\u7406\u89c4\u5219\u3002 Ingress Controller: \u53cd\u54cd\u4ee3\u7406\u7a0b\u5e8f\uff0c\u8d1f\u8d23\u89e3\u6790Ingress\u7684\u53cd\u5411\u4ee3\u7406\u89c4\u5219\uff0c\u5f53Ingress\u53d8\u52a8\u65f6 Ingress Controller \u4f1a\u53ca\u65f6\u66f4\u65b0\u76f8\u5e94\u7684\u8f6c\u53d1\u89c4\u5219\u3002 Ingress Controller\u5de5\u4f5c\u539f\u7406 \u00b6 \u901a\u8fc7API Server\u83b7\u53d6Ingress\u8d44\u6e90\u53d8\u5316\u52a8\u6001\u751f\u6210\u53cd\u5411\u4ee3\u7406\u7a0b\u5e8f\u6240\u9700\u7684\u914d\u7f6e\u6587\u4ef6\u7136\u540e\u91cd\u65b0\u52a0\u8f7d\u751f\u6210\u65b0\u7684\u8def\u7531\u8f6c\u53d1\u89c4\u5219\u3002 [\u53c2\u8003\u963f\u91cc\u4e91\u6587\u6863] \u514d\u8d39HTTPS\u8bc1\u4e66\u7ba1\u7406 \u00b6 \u4e91\u539f\u58f0\u8bc1\u4e66\u7ba1\u7406\u5f00\u6e90\u5de5\u5177 cert-manager\uff0c\u7528\u4e8e\u5728kubernetes\u96c6\u7fa4\u4e2d\u63d0\u4f9bHTTPS\u8bc1\u4e66\u5e76\u81ea\u52a8\u7eed\u671f\uff0c\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u90e8\u7f72\uff1a [\u53c2\u8003\u963f\u91cc\u4e91\u6587\u6863] \u90e8\u7f72cert-manager kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.3.0/cert-manager.yaml \u521b\u5efaClusterIssuer cat <<EOF | kubectl apply -f - apiVersion: cert-manager.io/v1 kind: ClusterIssuer metadata: name: letsencrypt-prod-http01 spec: acme: server: https://acme-v02.api.letsencrypt.org/directory email: your_email_name@gmail.com #\u66ff\u6362\u4e3a\u60a8\u7684\u90ae\u7bb1\u540d\u3002 privateKeySecretRef: name: letsencrypt-http01 solvers: - http01: ingress: class: nginx EOF \u521b\u5efaIngress\u8d44\u6e90\u5bf9\u8c61 cat <<EOF | kubectl apply -f - apiVersion: extensions/v1beta1 kind: Ingress metadata: name: ingress-tls annotations: kubernetes.io/ingress.class: \"nginx\" cert-manager.io/cluster-issuer: \"letsencrypt-prod-http01\" spec: tls: - hosts: - your_domain_name # \u66ff\u6362\u4e3a\u60a8\u7684\u57df\u540d\u3002 secretName: ingress-tls rules: - host: your_domain_name # \u66ff\u6362\u4e3a\u60a8\u7684\u57df\u540d\u3002 http: paths: - path: / backend: serviceName: your_service_name # \u66ff\u6362\u4e3a\u60a8\u7684\u540e\u7aef\u670d\u52a1\u540d\u3002 servicePort: your_service_port # \u66ff\u6362\u4e3a\u60a8\u7684\u670d\u52a1\u7aef\u53e3\u3002 EOF \u9ad8\u53ef\u9760\u90e8\u7f72 \u00b6 \u5373\u4e00\u4e2aIngress\u670d\u52a1\u72ec\u5360\u4e00\u4e2aIngress\u8282\u70b9\u7684\u65b9\u5f0f\uff0c\u907f\u514d\u4e1a\u52a1\u5e94\u7528\u548cIngress\u670d\u52a1\u53d1\u751f\u8d44\u6e90\u62a2\u5360 \u901a\u8fc7\u7ee9\u70b9\u6807\u7b7e\u6307\u5b9aIngress controller\u4ec5\u8fd0\u884c\u5728\u4e00\u4e9b\u9ad8\u914d\u8282\u70b9\u4e0a Node \u6dfb\u52a0 Label kubectl label nodes <NODE_NAME> node-role.kubernetes.io/ingress = \"true\" Note \u6dfb\u52a0\u6807\u7b7e\u7684\u8282\u70b9\u6570\u91cf\u8981\u5927\u4e8e\u7b49\u4e8e\u96c6\u7fa4Pod\u526f\u672c\u6570\uff0c\u4ece\u800c\u907f\u514d\u591a\u4e2aPod\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\u3002 \u67e5\u8be2\u7ed3\u679c\u4e2d\uff0c\u82e5ROLES\u7684\u503c\u663e\u793a\u4e3anone\uff0c\u5219\u8868\u793a\u4e3aWorker\u8282\u70b9\u3002 Ingress\u670d\u52a1\u90e8\u7f72\u5c3d\u91cf\u9009\u62e9\u5230Worker\u8282\u70b9\u6dfb\u52a0\u6807\u7b7e\u3002 Deployment \u589e\u52a0 NodeSelector \u914d\u7f6e\uff1a kubectl -n kube-system patch deployment nginx-ingress-controller -p '{\"spec\": {\"template\": {\"spec\": {\"nodeSelector\": {\"node-role.kubernetes.io/ingress\": \"true\"}}}}}' \u53e6\u5916\u4e00\u79cd\u901a\u8fc7HPA\u7684\u65b9\u5f0f\u6269\u5c55Pod\u526f\u672c\u6570\u7684\u65b9\u5f0f\u4e0d\u518d\u8be6\u8ff0 \u9ad8\u8d1f\u8f7d\u90e8\u7f72 \u00b6 \u786c\u4ef6\u9009\u578b \u00b6 \u9ad8\u5175\u6cd5\u573a\u666f\u79c0\u5b89\u6cfd\u8d60\u524d\u884cECS\u5b9e\u4f8b\uff1a * \u8ba1\u7b97\u578b\u5b9e\u4f8b: ecs.c6e.9xlarge * \u7f51\u7edc\u578b\u5b9e\u4f8b: ecs.g6e.8xlarge Kubernetes \u914d\u7f6e \u00b6 \u6dfb\u52a0taint \u548c label\uff0c\u8bbe\u7f6eIngress Pod\u72ec\u5360\u8282\u70b9\u8d44\u6e90 kubectl label nodes $node_name ingress-pod = \"yes\" kubectl taint nodes $node_name ingress-pod = \"yes\" :NoExecute \u8bbe\u7f6eCPU Policy \u4e3astatic Note CPU\u7ba1\u7406\u7b56\u7565 \u63a8\u8350\u8c03\u6574ingress-controller service\u5bf9\u5e94\u7684SLB\u89c4\u683c\u4e3a\u8d85\u5f3a\u578b\uff08slb.s3.large \u63a8\u8350\u96c6\u7fa4\u4f7f\u7528Terway\u7f51\u7edc\u63d2\u4ef6\u53ca\u914d\u7f6e\u72ec\u5360ENI\u3002 Ingress \u914d\u7f6e \u00b6 Ingress Pod QOS \u4e3a Guaranteed \u7c7b\u578b\u3002 \u8bbe\u7f6enginx-ingress-controller container\u7684\u8d44\u6e90\u9650\u5236requests\u548climits: 15 Core 20 GiB\u3002 \u8bbe\u7f6einitContainer init-sysctl\u7684\u8d44\u6e90\u9650\u5236requests\u548climits: 100 m 70 MiB\u3002 \u5220\u9664Ingress Pod\u4e2d\u7684podAntiAffinity\uff0c\u4f7f\u4e00\u4e2a\u8282\u70b9\u4e0a\u53ef\u8c03\u5ea6\u4e24\u4e2aPod\u3002 \u8c03\u6574Deployment Replicas\u6570\u4e3a\u65b0\u589e\u8282\u70b9\u6570\u76842\u500d\u3002 \u8bbe\u7f6eConfigMap\u7684worker-processes\u6570\u4e3a15\uff08\u9884\u7559\u90e8\u5206\u7ed9\u7cfb\u7edf\u4f7f\u7528\uff09\u3002 \u8c03\u6574ConfigMap\u7684keepalive\u94fe\u63a5\u6700\u5927\u8bf7\u6c42\u6570\u3002 [\u53c2\u8003\u963f\u91cc\u4e91\u6587\u6863] \u5176\u5b83: \u00b6 [Nginx Ingress \u9ad8\u5e76\u53d1\u5b9e\u8df5]","title":"Ingress\u90e8\u7f72\u89c4\u5212"},{"location":"public-cloud/alicloud_ingress/#ingress","text":"","title":"Ingress \u90e8\u7f72\u89c4\u5212"},{"location":"public-cloud/alicloud_ingress/#_1","text":"","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"public-cloud/alicloud_ingress/#kubernetesservice-ingress-ingress-controller","text":"Service: \u540e\u7aef\u670d\u52a1\u7684\u62bd\u8c61\u3002 Ingress: \u53cd\u5411\u4ee3\u7406\u89c4\u5219\u3002 Ingress Controller: \u53cd\u54cd\u4ee3\u7406\u7a0b\u5e8f\uff0c\u8d1f\u8d23\u89e3\u6790Ingress\u7684\u53cd\u5411\u4ee3\u7406\u89c4\u5219\uff0c\u5f53Ingress\u53d8\u52a8\u65f6 Ingress Controller \u4f1a\u53ca\u65f6\u66f4\u65b0\u76f8\u5e94\u7684\u8f6c\u53d1\u89c4\u5219\u3002","title":"Kubernetes\u4e2dService, Ingress, Ingress Controller\u7684\u5173\u7cfb"},{"location":"public-cloud/alicloud_ingress/#ingress-controller","text":"\u901a\u8fc7API Server\u83b7\u53d6Ingress\u8d44\u6e90\u53d8\u5316\u52a8\u6001\u751f\u6210\u53cd\u5411\u4ee3\u7406\u7a0b\u5e8f\u6240\u9700\u7684\u914d\u7f6e\u6587\u4ef6\u7136\u540e\u91cd\u65b0\u52a0\u8f7d\u751f\u6210\u65b0\u7684\u8def\u7531\u8f6c\u53d1\u89c4\u5219\u3002 [\u53c2\u8003\u963f\u91cc\u4e91\u6587\u6863]","title":"Ingress Controller\u5de5\u4f5c\u539f\u7406"},{"location":"public-cloud/alicloud_ingress/#https","text":"\u4e91\u539f\u58f0\u8bc1\u4e66\u7ba1\u7406\u5f00\u6e90\u5de5\u5177 cert-manager\uff0c\u7528\u4e8e\u5728kubernetes\u96c6\u7fa4\u4e2d\u63d0\u4f9bHTTPS\u8bc1\u4e66\u5e76\u81ea\u52a8\u7eed\u671f\uff0c\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u90e8\u7f72\uff1a [\u53c2\u8003\u963f\u91cc\u4e91\u6587\u6863] \u90e8\u7f72cert-manager kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.3.0/cert-manager.yaml \u521b\u5efaClusterIssuer cat <<EOF | kubectl apply -f - apiVersion: cert-manager.io/v1 kind: ClusterIssuer metadata: name: letsencrypt-prod-http01 spec: acme: server: https://acme-v02.api.letsencrypt.org/directory email: your_email_name@gmail.com #\u66ff\u6362\u4e3a\u60a8\u7684\u90ae\u7bb1\u540d\u3002 privateKeySecretRef: name: letsencrypt-http01 solvers: - http01: ingress: class: nginx EOF \u521b\u5efaIngress\u8d44\u6e90\u5bf9\u8c61 cat <<EOF | kubectl apply -f - apiVersion: extensions/v1beta1 kind: Ingress metadata: name: ingress-tls annotations: kubernetes.io/ingress.class: \"nginx\" cert-manager.io/cluster-issuer: \"letsencrypt-prod-http01\" spec: tls: - hosts: - your_domain_name # \u66ff\u6362\u4e3a\u60a8\u7684\u57df\u540d\u3002 secretName: ingress-tls rules: - host: your_domain_name # \u66ff\u6362\u4e3a\u60a8\u7684\u57df\u540d\u3002 http: paths: - path: / backend: serviceName: your_service_name # \u66ff\u6362\u4e3a\u60a8\u7684\u540e\u7aef\u670d\u52a1\u540d\u3002 servicePort: your_service_port # \u66ff\u6362\u4e3a\u60a8\u7684\u670d\u52a1\u7aef\u53e3\u3002 EOF","title":"\u514d\u8d39HTTPS\u8bc1\u4e66\u7ba1\u7406"},{"location":"public-cloud/alicloud_ingress/#_2","text":"\u5373\u4e00\u4e2aIngress\u670d\u52a1\u72ec\u5360\u4e00\u4e2aIngress\u8282\u70b9\u7684\u65b9\u5f0f\uff0c\u907f\u514d\u4e1a\u52a1\u5e94\u7528\u548cIngress\u670d\u52a1\u53d1\u751f\u8d44\u6e90\u62a2\u5360 \u901a\u8fc7\u7ee9\u70b9\u6807\u7b7e\u6307\u5b9aIngress controller\u4ec5\u8fd0\u884c\u5728\u4e00\u4e9b\u9ad8\u914d\u8282\u70b9\u4e0a Node \u6dfb\u52a0 Label kubectl label nodes <NODE_NAME> node-role.kubernetes.io/ingress = \"true\" Note \u6dfb\u52a0\u6807\u7b7e\u7684\u8282\u70b9\u6570\u91cf\u8981\u5927\u4e8e\u7b49\u4e8e\u96c6\u7fa4Pod\u526f\u672c\u6570\uff0c\u4ece\u800c\u907f\u514d\u591a\u4e2aPod\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\u3002 \u67e5\u8be2\u7ed3\u679c\u4e2d\uff0c\u82e5ROLES\u7684\u503c\u663e\u793a\u4e3anone\uff0c\u5219\u8868\u793a\u4e3aWorker\u8282\u70b9\u3002 Ingress\u670d\u52a1\u90e8\u7f72\u5c3d\u91cf\u9009\u62e9\u5230Worker\u8282\u70b9\u6dfb\u52a0\u6807\u7b7e\u3002 Deployment \u589e\u52a0 NodeSelector \u914d\u7f6e\uff1a kubectl -n kube-system patch deployment nginx-ingress-controller -p '{\"spec\": {\"template\": {\"spec\": {\"nodeSelector\": {\"node-role.kubernetes.io/ingress\": \"true\"}}}}}' \u53e6\u5916\u4e00\u79cd\u901a\u8fc7HPA\u7684\u65b9\u5f0f\u6269\u5c55Pod\u526f\u672c\u6570\u7684\u65b9\u5f0f\u4e0d\u518d\u8be6\u8ff0","title":"\u9ad8\u53ef\u9760\u90e8\u7f72"},{"location":"public-cloud/alicloud_ingress/#_3","text":"","title":"\u9ad8\u8d1f\u8f7d\u90e8\u7f72"},{"location":"public-cloud/alicloud_ingress/#_4","text":"\u9ad8\u5175\u6cd5\u573a\u666f\u79c0\u5b89\u6cfd\u8d60\u524d\u884cECS\u5b9e\u4f8b\uff1a * \u8ba1\u7b97\u578b\u5b9e\u4f8b: ecs.c6e.9xlarge * \u7f51\u7edc\u578b\u5b9e\u4f8b: ecs.g6e.8xlarge","title":"\u786c\u4ef6\u9009\u578b"},{"location":"public-cloud/alicloud_ingress/#kubernetes","text":"\u6dfb\u52a0taint \u548c label\uff0c\u8bbe\u7f6eIngress Pod\u72ec\u5360\u8282\u70b9\u8d44\u6e90 kubectl label nodes $node_name ingress-pod = \"yes\" kubectl taint nodes $node_name ingress-pod = \"yes\" :NoExecute \u8bbe\u7f6eCPU Policy \u4e3astatic Note CPU\u7ba1\u7406\u7b56\u7565 \u63a8\u8350\u8c03\u6574ingress-controller service\u5bf9\u5e94\u7684SLB\u89c4\u683c\u4e3a\u8d85\u5f3a\u578b\uff08slb.s3.large \u63a8\u8350\u96c6\u7fa4\u4f7f\u7528Terway\u7f51\u7edc\u63d2\u4ef6\u53ca\u914d\u7f6e\u72ec\u5360ENI\u3002","title":"Kubernetes \u914d\u7f6e"},{"location":"public-cloud/alicloud_ingress/#ingress_1","text":"Ingress Pod QOS \u4e3a Guaranteed \u7c7b\u578b\u3002 \u8bbe\u7f6enginx-ingress-controller container\u7684\u8d44\u6e90\u9650\u5236requests\u548climits: 15 Core 20 GiB\u3002 \u8bbe\u7f6einitContainer init-sysctl\u7684\u8d44\u6e90\u9650\u5236requests\u548climits: 100 m 70 MiB\u3002 \u5220\u9664Ingress Pod\u4e2d\u7684podAntiAffinity\uff0c\u4f7f\u4e00\u4e2a\u8282\u70b9\u4e0a\u53ef\u8c03\u5ea6\u4e24\u4e2aPod\u3002 \u8c03\u6574Deployment Replicas\u6570\u4e3a\u65b0\u589e\u8282\u70b9\u6570\u76842\u500d\u3002 \u8bbe\u7f6eConfigMap\u7684worker-processes\u6570\u4e3a15\uff08\u9884\u7559\u90e8\u5206\u7ed9\u7cfb\u7edf\u4f7f\u7528\uff09\u3002 \u8c03\u6574ConfigMap\u7684keepalive\u94fe\u63a5\u6700\u5927\u8bf7\u6c42\u6570\u3002 [\u53c2\u8003\u963f\u91cc\u4e91\u6587\u6863]","title":"Ingress \u914d\u7f6e"},{"location":"public-cloud/alicloud_ingress/#_5","text":"[Nginx Ingress \u9ad8\u5e76\u53d1\u5b9e\u8df5]","title":"\u5176\u5b83:"},{"location":"public-cloud/aliyun_kubernetes/","text":"AliCloud Managed Kubernetes \u00b6 \u7f51\u7edc\u89c4\u5212\uff1a \u00b6 https://help.aliyun.com/document_detail/86500.html \u4e13\u6709\u7f51\u7edc VPC \u7f51\u7edc\u89c4\u5212\uff1a \u00b6 \u5305\u62ec VPC \u7f51\u6bb5\u89c4\u5212\u548c VSwitch \u7f51\u6bb5\u89c4\u5212: VPC \u7f51\u6bb5\u53ea\u80fd\u4ece 10.0.0.0/8\u3001172.16.0.0/12\u3001192.168.0.0/16 \u4e09\u8005\u5f53\u4e2d\u9009\u62e9. VPC VSwitch \u4e3b\u8981\u7528\u4e8e\u8282\u70b9\u901a\u8baf\uff0c\u5176\u7f51\u6bb5\u6ce8\u610f\u4e8b\u9879\uff1a 1. \u53ea\u80fd\u662f\u5f53\u524d VPC \u7f51\u6bb5\u7684\u5b50\u96c6\uff08\u53ef\u4ee5\u548c VPC \u7f51\u6bb5\u4e00\u6837\u4f46\u4e0d\u80fd\u8d85\u8fc7\uff09\u3002 2. \u4e00\u4e2a VPC \u4e0b\u53ef\u4ee5\u521b\u5efa\u591a\u4e2a VSwitch \u4f46 VSwitch\u4e4b\u95f4\u7684\u7f51\u6bb5\u4e0d\u80fd\u91cd\u5408\u3002 3. VSwitch \u5fc5\u987b \u548c Pod VSwitch \u5728\u540c\u4e00\u53ef\u7528\u533a\u4e0b\u3002 Kuberentes \u7f51\u6bb5\u89c4\u5212\uff1a \u00b6 \u5305\u62ec Pod CIDR \u548c Service CIDR Pod CIDR \u7528\u4e8e Pod \u901a\u8baf\uff1a Terway \u6ce8\u610f\u4e8b\u9879\uff1a 1. Pod \u865a\u62df\u4ea4\u6362\u673a == VPC Switch\u3002 2. Pod IP \u662f\u4ece VPC Switch \u91cc\u83b7\u53d6\u7684\u3002 3. \u8be5\u7f51\u6bb5\u4e0d\u80fd\u4e0e VSwitch \u548c Service CIDR \u91cd\u53e0\u3002 4. VSwitch \u548c Pod CIDR \u9700\u5728\u540c\u4e00\u53ef\u7528\u533a\u4e0b\u3002 Flannel \u6ce8\u610f\u4e8b\u9879\uff1a 1. \u975eVPC\u4ea4\u6362\u673a\uff0c\u4e3a\u865a\u62df\u7f51\u6bb5\u3002 2. \u4e0d\u80fd\u4e0e VSwitch \u7f51\u6bb5\u91cd\u53e0\u3002 3. \u4e0d\u80fd\u4e0e Service CIDR\u7f51\u6bb5\u91cd\u53e0\u3002 \u4f8b\u5982\uff0cVPC\u7f51\u6bb5\u7528\u7684\u662f172.16.0.0/12\uff0cKubernetes\u7684Pod\u5730\u5740\u6bb5\u5c31\u4e0d\u80fd\u4f7f\u7528172.16.0.0/16\u3001172.17.0.0/16\u7b49\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u5730\u5740\u90fd\u5305\u542b\u5728172.16.0.0/12\u91cc\u3002 Service CIDR \u5bf9\u5e94\u5fae ClusterIP\uff0c\u6bcf\u4e2a Service \u90fd\u6709\u81ea\u5df1\u7684 IP\uff0c\u6ce8\u610f\u4e8b\u9879\uff1a 1. \u53ea\u80fd\u5728 kubernetes \u96c6\u7fa4\u5185\u90e8\u4f7f\u7528\uff0c\u4e0d\u80fd\u5728\u96c6\u7fa4\u5916\u90e8\u4f7f\u7528\u3002 2. \u662f\u4e0d\u80fd\u4e0eVSwitch \u5730\u5740\u6bb5\u91cd\u53e0 3. \u4e0d\u80fd\u548c Pod CIDR \u91cd\u53e0\u3002 \u8282\u70b9\u6c60\u9009\u578b \u00b6 \u6258\u7ba1\u8282\u70b9\u6c60\u9002\u7528\u573a\u666f \uff1a 1. \u53ea\u5173\u6ce8\u4e0a\u5c42\u5e94\u7528\u5f00\u53d1\uff0c\u4e0d\u5e0c\u671b\u4e3b\u52a8\u8fd0\u7ef4worker\u8282\u70b9\u3002 2. \u9700\u8981\u5feb\u901f\u54cd\u5e94CVE\u5b89\u5168\u6f0f\u6d1e\u3002\u5f53\u65b0\u7684CVE\u53d1\u5e03\u540e\uff0c\u80fd\u591f\u8fc5\u901f\u5347\u7ea7\uff0c\u4ece\u800c\u4fee\u8865\u6f0f\u6d1e\u3002 3. \u5bf9\u5e95\u5c42\u8282\u70b9\u7684\u53d8\u66f4\u4e0d\u654f\u611f\uff0c \u4e1a\u52a1Pod\u5bf9\u8fc1\u79fb\u6709\u8f83\u9ad8\u7684\u5bb9\u5fcd\u5ea6 \uff0c\u66f4\u52a0\u5173\u6ce8\u4e1a\u52a1\u7684\u5f39\u6027\u800c\u975e\u4e0d\u53ef\u53d8\u6027\u3002 4. \u9700\u8981\u5347\u7ea7\u8282\u70b9\u4e0a\u7684Docker\u7248\u672c\u53caOS\u955c\u50cf\u7248\u672c\u3002","title":"AliCloud Managed Kubernetes"},{"location":"public-cloud/aliyun_kubernetes/#alicloud-managed-kubernetes","text":"","title":"AliCloud Managed Kubernetes"},{"location":"public-cloud/aliyun_kubernetes/#_1","text":"https://help.aliyun.com/document_detail/86500.html","title":"\u7f51\u7edc\u89c4\u5212\uff1a"},{"location":"public-cloud/aliyun_kubernetes/#vpc","text":"\u5305\u62ec VPC \u7f51\u6bb5\u89c4\u5212\u548c VSwitch \u7f51\u6bb5\u89c4\u5212: VPC \u7f51\u6bb5\u53ea\u80fd\u4ece 10.0.0.0/8\u3001172.16.0.0/12\u3001192.168.0.0/16 \u4e09\u8005\u5f53\u4e2d\u9009\u62e9. VPC VSwitch \u4e3b\u8981\u7528\u4e8e\u8282\u70b9\u901a\u8baf\uff0c\u5176\u7f51\u6bb5\u6ce8\u610f\u4e8b\u9879\uff1a 1. \u53ea\u80fd\u662f\u5f53\u524d VPC \u7f51\u6bb5\u7684\u5b50\u96c6\uff08\u53ef\u4ee5\u548c VPC \u7f51\u6bb5\u4e00\u6837\u4f46\u4e0d\u80fd\u8d85\u8fc7\uff09\u3002 2. \u4e00\u4e2a VPC \u4e0b\u53ef\u4ee5\u521b\u5efa\u591a\u4e2a VSwitch \u4f46 VSwitch\u4e4b\u95f4\u7684\u7f51\u6bb5\u4e0d\u80fd\u91cd\u5408\u3002 3. VSwitch \u5fc5\u987b \u548c Pod VSwitch \u5728\u540c\u4e00\u53ef\u7528\u533a\u4e0b\u3002","title":"\u4e13\u6709\u7f51\u7edc VPC \u7f51\u7edc\u89c4\u5212\uff1a"},{"location":"public-cloud/aliyun_kubernetes/#kuberentes","text":"\u5305\u62ec Pod CIDR \u548c Service CIDR Pod CIDR \u7528\u4e8e Pod \u901a\u8baf\uff1a Terway \u6ce8\u610f\u4e8b\u9879\uff1a 1. Pod \u865a\u62df\u4ea4\u6362\u673a == VPC Switch\u3002 2. Pod IP \u662f\u4ece VPC Switch \u91cc\u83b7\u53d6\u7684\u3002 3. \u8be5\u7f51\u6bb5\u4e0d\u80fd\u4e0e VSwitch \u548c Service CIDR \u91cd\u53e0\u3002 4. VSwitch \u548c Pod CIDR \u9700\u5728\u540c\u4e00\u53ef\u7528\u533a\u4e0b\u3002 Flannel \u6ce8\u610f\u4e8b\u9879\uff1a 1. \u975eVPC\u4ea4\u6362\u673a\uff0c\u4e3a\u865a\u62df\u7f51\u6bb5\u3002 2. \u4e0d\u80fd\u4e0e VSwitch \u7f51\u6bb5\u91cd\u53e0\u3002 3. \u4e0d\u80fd\u4e0e Service CIDR\u7f51\u6bb5\u91cd\u53e0\u3002 \u4f8b\u5982\uff0cVPC\u7f51\u6bb5\u7528\u7684\u662f172.16.0.0/12\uff0cKubernetes\u7684Pod\u5730\u5740\u6bb5\u5c31\u4e0d\u80fd\u4f7f\u7528172.16.0.0/16\u3001172.17.0.0/16\u7b49\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u5730\u5740\u90fd\u5305\u542b\u5728172.16.0.0/12\u91cc\u3002 Service CIDR \u5bf9\u5e94\u5fae ClusterIP\uff0c\u6bcf\u4e2a Service \u90fd\u6709\u81ea\u5df1\u7684 IP\uff0c\u6ce8\u610f\u4e8b\u9879\uff1a 1. \u53ea\u80fd\u5728 kubernetes \u96c6\u7fa4\u5185\u90e8\u4f7f\u7528\uff0c\u4e0d\u80fd\u5728\u96c6\u7fa4\u5916\u90e8\u4f7f\u7528\u3002 2. \u662f\u4e0d\u80fd\u4e0eVSwitch \u5730\u5740\u6bb5\u91cd\u53e0 3. \u4e0d\u80fd\u548c Pod CIDR \u91cd\u53e0\u3002","title":"Kuberentes \u7f51\u6bb5\u89c4\u5212\uff1a"},{"location":"public-cloud/aliyun_kubernetes/#_2","text":"\u6258\u7ba1\u8282\u70b9\u6c60\u9002\u7528\u573a\u666f \uff1a 1. \u53ea\u5173\u6ce8\u4e0a\u5c42\u5e94\u7528\u5f00\u53d1\uff0c\u4e0d\u5e0c\u671b\u4e3b\u52a8\u8fd0\u7ef4worker\u8282\u70b9\u3002 2. \u9700\u8981\u5feb\u901f\u54cd\u5e94CVE\u5b89\u5168\u6f0f\u6d1e\u3002\u5f53\u65b0\u7684CVE\u53d1\u5e03\u540e\uff0c\u80fd\u591f\u8fc5\u901f\u5347\u7ea7\uff0c\u4ece\u800c\u4fee\u8865\u6f0f\u6d1e\u3002 3. \u5bf9\u5e95\u5c42\u8282\u70b9\u7684\u53d8\u66f4\u4e0d\u654f\u611f\uff0c \u4e1a\u52a1Pod\u5bf9\u8fc1\u79fb\u6709\u8f83\u9ad8\u7684\u5bb9\u5fcd\u5ea6 \uff0c\u66f4\u52a0\u5173\u6ce8\u4e1a\u52a1\u7684\u5f39\u6027\u800c\u975e\u4e0d\u53ef\u53d8\u6027\u3002 4. \u9700\u8981\u5347\u7ea7\u8282\u70b9\u4e0a\u7684Docker\u7248\u672c\u53caOS\u955c\u50cf\u7248\u672c\u3002","title":"\u8282\u70b9\u6c60\u9009\u578b"},{"location":"tools/macos/","text":"MacOS \u672c\u5730\u73af\u5883 \u00b6 \u5de5\u5177\u5b89\u88c5 \u00b6 IDE\uff1a vscode , vscode cli , sublime \u6548\u7387\u5de5\u5177: Alfred , Iterm2 oh-my-zsh # install sh -c \" $( curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh ) \" brew /bin/bash -c \" $( curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh ) \" \u66ff\u6362\u4e2d\u79d1\u5927 brew \u6570\u636e\u6e90 Note $ brew install go == > Searching for similarly named formulae... Error: No similarly named formulae found. Error: No available formula or cask with the name \"go\" . It was migrated from homebrew/cask to homebrew/core. \u89e3\u51b3\u65b9\u6cd5\uff1a BREW_HOME_DIR = $( brew --repo ) [ -d $BREW_HOME_DIR /Library/Taps/homebrew/homebrew-core ] && rm -rf $BREW_HOME_DIR /Library/Taps/homebrew/homebrew-core \u672c\u5730\u5f00\u53d1\u73af\u5883\u5b89\u88c5 Docker , JDK mkdir -p $HOME /pconf cat <<EOF >>$HOME/pconf/.brew.packages.txt socat htop git go node minikube python pwgen kubectl gnupg EOF brew install $( < $HOME /pconf/.brew.packages.txt ) sudo pip3 install mkdocs-material ZSH \u914d\u7f6e # \u521b\u5efa ZSH \u672c\u5730\u914d\u7f6e\u6587\u4ef6 mkdir -p $HOME /pconf touch $HOME /pconf/.zsh.local.secret $HOME /pconf/.zsh.local.env $HOME /pconf/.zsh.local.func cat <<EOF >>$HOME/pconf/.zsh.local.alias alias gst=\"git status\" alias gsm=\"git summary\" alias gadd='git add' alias gdiff='git diff' alias gfetch='git fetch' alias gremote='git remote -v' alias grebase='git rebase' alias gbranch='git branch' alias gpull=\"git pull origin\" alias gpush=\"git push origin\" alias gcheckout=\"git checkout\" alias glog=\"git log\" alias gcommit=\"git commit --verbose -m\" alias gmerge=\"git merge\" alias gpg_restart='gpgconf --kill gpg-agent' alias open_ssh_configs='subl $HOME/.ssh/configs' alias open_zshrc='subl $HOME/.zshrc' alias open_zsh_secret='subl $HOME/pconf/.zsh.local.secret' alias open_zsh_env='subl $HOME/pconf/.zsh.local.env' alias open_zsh_alias='subl $HOME/pconf/.zsh.local.alias' alias open_zsh_func='subl $HOME/pconf/.zsh.local.func' EOF cat <<EOF >>$HOME/.zprofile export PATH=\"/Applications/Sublime Text.app/Contents/SharedSupport/bin:$PATH\" export PATH=\"$PATH:/opt/homebrew/bin\" export GOPATH=$(go env GOPATH) export GOPROXY=https://goproxy.cn export PATH=\"$GOPATH/bin:/usr/local/bin/python3:$PATH\" GPG_TTY=$(tty) export GPG_TTY source $HOME/pconf/.zsh.local.secret source $HOME/pconf/.zsh.local.env source $HOME/pconf/.zsh.local.alias source $HOME/pconf/.zsh.local.func EOF \u5176\u5b83 \u00b6 \u5b57\u4f53\u4f9d\u8d56\uff1a Jetbrains Mono # \u4e0b\u8f7d https://www.jetbrains.com/lp/mono/ # \u5b89\u88c5 https://zhuanlan.zhihu.com/p/143057320","title":"MacOS"},{"location":"tools/macos/#macos","text":"","title":"MacOS \u672c\u5730\u73af\u5883"},{"location":"tools/macos/#_1","text":"IDE\uff1a vscode , vscode cli , sublime \u6548\u7387\u5de5\u5177: Alfred , Iterm2 oh-my-zsh # install sh -c \" $( curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh ) \" brew /bin/bash -c \" $( curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh ) \" \u66ff\u6362\u4e2d\u79d1\u5927 brew \u6570\u636e\u6e90 Note $ brew install go == > Searching for similarly named formulae... Error: No similarly named formulae found. Error: No available formula or cask with the name \"go\" . It was migrated from homebrew/cask to homebrew/core. \u89e3\u51b3\u65b9\u6cd5\uff1a BREW_HOME_DIR = $( brew --repo ) [ -d $BREW_HOME_DIR /Library/Taps/homebrew/homebrew-core ] && rm -rf $BREW_HOME_DIR /Library/Taps/homebrew/homebrew-core \u672c\u5730\u5f00\u53d1\u73af\u5883\u5b89\u88c5 Docker , JDK mkdir -p $HOME /pconf cat <<EOF >>$HOME/pconf/.brew.packages.txt socat htop git go node minikube python pwgen kubectl gnupg EOF brew install $( < $HOME /pconf/.brew.packages.txt ) sudo pip3 install mkdocs-material ZSH \u914d\u7f6e # \u521b\u5efa ZSH \u672c\u5730\u914d\u7f6e\u6587\u4ef6 mkdir -p $HOME /pconf touch $HOME /pconf/.zsh.local.secret $HOME /pconf/.zsh.local.env $HOME /pconf/.zsh.local.func cat <<EOF >>$HOME/pconf/.zsh.local.alias alias gst=\"git status\" alias gsm=\"git summary\" alias gadd='git add' alias gdiff='git diff' alias gfetch='git fetch' alias gremote='git remote -v' alias grebase='git rebase' alias gbranch='git branch' alias gpull=\"git pull origin\" alias gpush=\"git push origin\" alias gcheckout=\"git checkout\" alias glog=\"git log\" alias gcommit=\"git commit --verbose -m\" alias gmerge=\"git merge\" alias gpg_restart='gpgconf --kill gpg-agent' alias open_ssh_configs='subl $HOME/.ssh/configs' alias open_zshrc='subl $HOME/.zshrc' alias open_zsh_secret='subl $HOME/pconf/.zsh.local.secret' alias open_zsh_env='subl $HOME/pconf/.zsh.local.env' alias open_zsh_alias='subl $HOME/pconf/.zsh.local.alias' alias open_zsh_func='subl $HOME/pconf/.zsh.local.func' EOF cat <<EOF >>$HOME/.zprofile export PATH=\"/Applications/Sublime Text.app/Contents/SharedSupport/bin:$PATH\" export PATH=\"$PATH:/opt/homebrew/bin\" export GOPATH=$(go env GOPATH) export GOPROXY=https://goproxy.cn export PATH=\"$GOPATH/bin:/usr/local/bin/python3:$PATH\" GPG_TTY=$(tty) export GPG_TTY source $HOME/pconf/.zsh.local.secret source $HOME/pconf/.zsh.local.env source $HOME/pconf/.zsh.local.alias source $HOME/pconf/.zsh.local.func EOF","title":"\u5de5\u5177\u5b89\u88c5"},{"location":"tools/macos/#_2","text":"\u5b57\u4f53\u4f9d\u8d56\uff1a Jetbrains Mono # \u4e0b\u8f7d https://www.jetbrains.com/lp/mono/ # \u5b89\u88c5 https://zhuanlan.zhihu.com/p/143057320","title":"\u5176\u5b83"},{"location":"tools/mkdoc/","text":"\u4f7f\u7528 mkdocs \u642d\u5efa\u9759\u6001\u7ad9\u70b9 \u00b6 \u5176\u5b9e\u65e0\u8bba\u5b98\u65b9\u8fd8\u662f\u535a\u5ba2\u6587\u7ae0\u90fd\u4ecb\u7ecd\u633a\u591a\u7684\uff0c\u8fd9\u91cc\u5c31\u968f\u7b14\u8bb0\u5f55\u4e00\u4e0b\u5427 \u51c6\u5907 \u00b6 \u5f00\u59cb\u4e4b\u524d\u8bf7\u81ea\u884c\u9605\u8bfb mkdocs \u5b98\u65b9\u5b66\u4e60\u8d44\u6599\u3002 \u521b\u5efa\u9879\u76ee \u00b6 mkdir -p my-site cd my-site mkdocs new . \u52a0\u5165github workflows \u00b6 name : CI on : push : branches : [ master ] workflow_dispatch : jobs : build : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - uses : actions/setup-python@v2 with : python-version : 3.x - run : pip install mkdocs-material - run : mkdocs gh-deploy --force \u63d0\u4ea4\u4ee3\u7801 \u00b6 # github \u4e0a\u81ea\u884c\u521b\u5efa repo \u7136\u540e\u6307\u5b9aremote git remote add origin git@github.com:<username>/<projectname>.git git add . git commit -m 'init project' git push origin -u master Note \u8fd9\u91cc\u8bf4\u660e\u4e00\u4e0b\uff0c\u63d0\u4ea4\u540eworkflow\u4f1a\u5728\u672c\u9879\u76ee\u5185\u4ea7\u751f\u4e00\u4e2a gh-deploy \u7684\u65b0\u5206\u652f \u914d\u7f6e Github Page \u00b6 \u6309\u7167\u56fe\u793a\u987a\u5e8f\u8fdb\u5165 Pages \u914d\u7f6e\u9875\u9762\u6700\u540e\u4fdd\u5b58\u5373\u53ef\u3002","title":"MKDocs"},{"location":"tools/mkdoc/#mkdocs","text":"\u5176\u5b9e\u65e0\u8bba\u5b98\u65b9\u8fd8\u662f\u535a\u5ba2\u6587\u7ae0\u90fd\u4ecb\u7ecd\u633a\u591a\u7684\uff0c\u8fd9\u91cc\u5c31\u968f\u7b14\u8bb0\u5f55\u4e00\u4e0b\u5427","title":"\u4f7f\u7528 mkdocs \u642d\u5efa\u9759\u6001\u7ad9\u70b9"},{"location":"tools/mkdoc/#_1","text":"\u5f00\u59cb\u4e4b\u524d\u8bf7\u81ea\u884c\u9605\u8bfb mkdocs \u5b98\u65b9\u5b66\u4e60\u8d44\u6599\u3002","title":"\u51c6\u5907"},{"location":"tools/mkdoc/#_2","text":"mkdir -p my-site cd my-site mkdocs new .","title":"\u521b\u5efa\u9879\u76ee"},{"location":"tools/mkdoc/#github-workflows","text":"name : CI on : push : branches : [ master ] workflow_dispatch : jobs : build : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - uses : actions/setup-python@v2 with : python-version : 3.x - run : pip install mkdocs-material - run : mkdocs gh-deploy --force","title":"\u52a0\u5165github workflows"},{"location":"tools/mkdoc/#_3","text":"# github \u4e0a\u81ea\u884c\u521b\u5efa repo \u7136\u540e\u6307\u5b9aremote git remote add origin git@github.com:<username>/<projectname>.git git add . git commit -m 'init project' git push origin -u master Note \u8fd9\u91cc\u8bf4\u660e\u4e00\u4e0b\uff0c\u63d0\u4ea4\u540eworkflow\u4f1a\u5728\u672c\u9879\u76ee\u5185\u4ea7\u751f\u4e00\u4e2a gh-deploy \u7684\u65b0\u5206\u652f","title":"\u63d0\u4ea4\u4ee3\u7801"},{"location":"tools/mkdoc/#github-page","text":"\u6309\u7167\u56fe\u793a\u987a\u5e8f\u8fdb\u5165 Pages \u914d\u7f6e\u9875\u9762\u6700\u540e\u4fdd\u5b58\u5373\u53ef\u3002","title":"\u914d\u7f6e Github Page"},{"location":"tools/network_related/","text":"\u57fa\u672c\u529f \u00b6 IP \u5730\u5740\u7531\u7f51\u7edc\u4f4d\u548c\u4e3b\u673a\u4f4d\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u901a\u8fc7\u5b50\u7f51\u63a9\u7801\u6765\u533a\u5206\u7f51\u7edc\u4f4d\u548c\u4e3b\u673a\u4f4d\uff0c\u5b50\u7f51\u63a9\u7801\u4e3a1\u7684\u662f\u4e3b\u673a\u4f4d\uff0c0\u7684\u662f\u4e3b\u673a\u4f4d\uff0c\u4f8b\u5982\uff1a225.225.225.0\uff0c \u524d\u4e09\u6bb5\u4f4d\u7f51\u7edc\u4f4d\uff0c\u6700\u540e\u4e00\u6bb5\u4f4d\u4e3b\u673a\u4f4d\u3002 \u53ef\u7528 IP \u6bb5\uff1a \u00b6 \u7f51\u7edc\u5730\u5740 \uff5e \u5e7f\u64ad\u5730\u5740 \u53bb\u9664\u7f51\u7edc\u5730\u5740\u548c\u5e7f\u64ad\u5730\u5740\u540e\u7684\u8303\u56f4\u3002 expr: [\u7f51\u7edc\u5730\u5740+1, \u5e7f\u64ad\u5730\u5740-1] \u7f51\u7edc\u5730\u5740\uff08\u5df2\u77e5 IP \u5730\u5740\u548c\u5b50\u7f51\u63a9\u7801\uff09\uff1a \u00b6 expr: \u7f51\u7edc\u5730\u5740 = IP\u4e8c\u8fdb\u5236\u5730\u5740 & \u5b50\u7f51\u63a9\u7801\u4e8c\u8fdb\u5236\u5730\u5740 \u4f8b\u5982\uff1a \u5df2\u77e5 IP\uff1a222.73.196.18/29\uff0c \u5176\u4e2d /29 \u4ee3\u8868\u5b50\u7f51\u63a9\u7801*\u4e8c\u8fdb\u5236*\u4ece\u5de6\u5230\u53f3\u670929\u4e2a1 (\u4e8c\u8fdb\u5236 11111111.11111111.11111111.11111000,\u5341\u8fdb\u5236 (255.255.255.248))\uff0cIP \u5730\u5740\u4e8c\u8fdb\u5236 11011110.01001001.11000100.00010010\uff0c\u5341\u8fdb\u5236 \uff08222.73.196.18\uff09\u5219\u5c06\u5b50\u7f51\u63a9\u7801\u548cIP\u5730\u5740\u4e8c\u8fdb\u5236\u505a*\u4f4d\u4e0e\u8fd0\u7b97* \u5f97\u523011011110.01001001.11000100.00010000,\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236\u540e222.73.196.16 \u5373\u7f51\u7edc\u5730\u5740 \u5e7f\u64ad\u5730\u5740\u8ba1\u7b97 \u00b6 expr: set IP \u5730\u5740\u6bb5\u4e8c\u8fdb\u5236\u4e3b\u673a\u4f4d = 1 \u4f8b\u5982\uff1a \u5df2\u77e5 IP\uff1a222.73.196.18/29\uff0c\u4e8c\u8fdb\u5236\u4e3a\uff1a11011110.01001001.11000100.00010010\uff0c\u63a9\u7801\u5f97\uff1a 32-29 = 3 => \u540e\u4e09\u4f4d\u4e3a\u4e3b\u673a\u4f4d\uff0c\u8f6c\u6362\u4e3a1\uff0c\u65b0\u7684\u4e8c\u8fdb\u5236\u4e3a\uff1a11011110.01001001.11000100.00010111\uff0c\u6362\u4e3a\u5341\u8fdb\u5236\uff1a222.73.196.23 \u5373\u4e3a\u5e7f\u64ad\u5730\u5740\u3002 \u4e3b\u673a\u53f7\u8ba1\u7b97 \u00b6 expr\uff1a \u4e3b\u673a\u53f7 = IP\u4e8c\u8fdb\u5236\u5730\u5740 & \u5b50\u7f51\u63a9\u7801\u53d6\u53cd \u4f8b\u5982\uff1a \u5df2\u77e5 IP\uff1a222.73.196.18/29\uff0c \u5b50\u7f51\u63a9\u7801\u53d6\u53cd\uff1a 00000000.00000000.00000000.00000111\uff0cIP \u4e8c\u8fdb\u5236: 11011110.01001001.11000100.00010010\uff0c \u4f4d\u4e0e\u8fd0\u7b97\u5f97\uff1a00000000.00000000.00000000.00000010 \u5341\u8fdb\u5236\u4e3a 0.0.0.2\uff0c\u5373\u4e3b\u673a\u53f7\u4e3a 2.","title":"Network related"},{"location":"tools/network_related/#_1","text":"IP \u5730\u5740\u7531\u7f51\u7edc\u4f4d\u548c\u4e3b\u673a\u4f4d\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u901a\u8fc7\u5b50\u7f51\u63a9\u7801\u6765\u533a\u5206\u7f51\u7edc\u4f4d\u548c\u4e3b\u673a\u4f4d\uff0c\u5b50\u7f51\u63a9\u7801\u4e3a1\u7684\u662f\u4e3b\u673a\u4f4d\uff0c0\u7684\u662f\u4e3b\u673a\u4f4d\uff0c\u4f8b\u5982\uff1a225.225.225.0\uff0c \u524d\u4e09\u6bb5\u4f4d\u7f51\u7edc\u4f4d\uff0c\u6700\u540e\u4e00\u6bb5\u4f4d\u4e3b\u673a\u4f4d\u3002","title":"\u57fa\u672c\u529f"},{"location":"tools/network_related/#ip","text":"\u7f51\u7edc\u5730\u5740 \uff5e \u5e7f\u64ad\u5730\u5740 \u53bb\u9664\u7f51\u7edc\u5730\u5740\u548c\u5e7f\u64ad\u5730\u5740\u540e\u7684\u8303\u56f4\u3002 expr: [\u7f51\u7edc\u5730\u5740+1, \u5e7f\u64ad\u5730\u5740-1]","title":"\u53ef\u7528 IP \u6bb5\uff1a"},{"location":"tools/network_related/#ip_1","text":"expr: \u7f51\u7edc\u5730\u5740 = IP\u4e8c\u8fdb\u5236\u5730\u5740 & \u5b50\u7f51\u63a9\u7801\u4e8c\u8fdb\u5236\u5730\u5740 \u4f8b\u5982\uff1a \u5df2\u77e5 IP\uff1a222.73.196.18/29\uff0c \u5176\u4e2d /29 \u4ee3\u8868\u5b50\u7f51\u63a9\u7801*\u4e8c\u8fdb\u5236*\u4ece\u5de6\u5230\u53f3\u670929\u4e2a1 (\u4e8c\u8fdb\u5236 11111111.11111111.11111111.11111000,\u5341\u8fdb\u5236 (255.255.255.248))\uff0cIP \u5730\u5740\u4e8c\u8fdb\u5236 11011110.01001001.11000100.00010010\uff0c\u5341\u8fdb\u5236 \uff08222.73.196.18\uff09\u5219\u5c06\u5b50\u7f51\u63a9\u7801\u548cIP\u5730\u5740\u4e8c\u8fdb\u5236\u505a*\u4f4d\u4e0e\u8fd0\u7b97* \u5f97\u523011011110.01001001.11000100.00010000,\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236\u540e222.73.196.16 \u5373\u7f51\u7edc\u5730\u5740","title":"\u7f51\u7edc\u5730\u5740\uff08\u5df2\u77e5 IP \u5730\u5740\u548c\u5b50\u7f51\u63a9\u7801\uff09\uff1a"},{"location":"tools/network_related/#_2","text":"expr: set IP \u5730\u5740\u6bb5\u4e8c\u8fdb\u5236\u4e3b\u673a\u4f4d = 1 \u4f8b\u5982\uff1a \u5df2\u77e5 IP\uff1a222.73.196.18/29\uff0c\u4e8c\u8fdb\u5236\u4e3a\uff1a11011110.01001001.11000100.00010010\uff0c\u63a9\u7801\u5f97\uff1a 32-29 = 3 => \u540e\u4e09\u4f4d\u4e3a\u4e3b\u673a\u4f4d\uff0c\u8f6c\u6362\u4e3a1\uff0c\u65b0\u7684\u4e8c\u8fdb\u5236\u4e3a\uff1a11011110.01001001.11000100.00010111\uff0c\u6362\u4e3a\u5341\u8fdb\u5236\uff1a222.73.196.23 \u5373\u4e3a\u5e7f\u64ad\u5730\u5740\u3002","title":"\u5e7f\u64ad\u5730\u5740\u8ba1\u7b97"},{"location":"tools/network_related/#_3","text":"expr\uff1a \u4e3b\u673a\u53f7 = IP\u4e8c\u8fdb\u5236\u5730\u5740 & \u5b50\u7f51\u63a9\u7801\u53d6\u53cd \u4f8b\u5982\uff1a \u5df2\u77e5 IP\uff1a222.73.196.18/29\uff0c \u5b50\u7f51\u63a9\u7801\u53d6\u53cd\uff1a 00000000.00000000.00000000.00000111\uff0cIP \u4e8c\u8fdb\u5236: 11011110.01001001.11000100.00010010\uff0c \u4f4d\u4e0e\u8fd0\u7b97\u5f97\uff1a00000000.00000000.00000000.00000010 \u5341\u8fdb\u5236\u4e3a 0.0.0.2\uff0c\u5373\u4e3b\u673a\u53f7\u4e3a 2.","title":"\u4e3b\u673a\u53f7\u8ba1\u7b97"},{"location":"tools/plantuml_vscode/","text":"\u751f\u6210 Go \u7a0b\u5e8fUML \u00b6 \u51c6\u5907 \u00b6 \u672c\u5730\u5b89\u88c5\u9879\u76ee: goplantuml \u5b89\u88c5vscode JDK vscode plantuml \u63d2\u4ef6 \u547d\u4ee4\u751f\u6210 puml \u00b6 goplantuml -recursive ./ > diagram_file_name.puml \u751f\u6210\u56fe\u7247 \u00b6 \u5728 workspace \u4e0b\u627e\u5230 *.puml \u6587\u4ef6 \u9009\u4e2d\u6587\u4ef6 \u2192 \u83dc\u5355\u4e2d\u9009\u62e9 Export workspace diagram \u2192 png; \u7a0d\u7b49\u7247\u523b\u7b49\u5f85\u56fe\u7247\u6e32\u67d3\u6210\u529f\u63d0\u793a\u3002 Note \u4fee\u6539 vscode settings.json,\u6700\u540e\u4e00\u884c\u6dfb\u52a0plantuml\u53c2\u6570 \"plantuml.commandArgs\" : [ \"-DPLANTUML_LIMIT_SIZE=20000\" ], \u5f53\u751f\u6210\u7684uml\u5c3a\u5bf8\u5f88\u5927\u7684\u65f6\u5019\u901a\u8fc7\u4fee\u6539\u8be5\u53c2\u6570\u53ef\u4ee5\u907f\u514d\u751f\u6210\u56fe\u7247\u88ab\u622a\u65ad\u7684\u95ee\u9898\u3002","title":"Plantuml with vscode"},{"location":"tools/plantuml_vscode/#go-uml","text":"","title":"\u751f\u6210 Go \u7a0b\u5e8fUML"},{"location":"tools/plantuml_vscode/#_1","text":"\u672c\u5730\u5b89\u88c5\u9879\u76ee: goplantuml \u5b89\u88c5vscode JDK vscode plantuml \u63d2\u4ef6","title":"\u51c6\u5907"},{"location":"tools/plantuml_vscode/#puml","text":"goplantuml -recursive ./ > diagram_file_name.puml","title":"\u547d\u4ee4\u751f\u6210 puml"},{"location":"tools/plantuml_vscode/#_2","text":"\u5728 workspace \u4e0b\u627e\u5230 *.puml \u6587\u4ef6 \u9009\u4e2d\u6587\u4ef6 \u2192 \u83dc\u5355\u4e2d\u9009\u62e9 Export workspace diagram \u2192 png; \u7a0d\u7b49\u7247\u523b\u7b49\u5f85\u56fe\u7247\u6e32\u67d3\u6210\u529f\u63d0\u793a\u3002 Note \u4fee\u6539 vscode settings.json,\u6700\u540e\u4e00\u884c\u6dfb\u52a0plantuml\u53c2\u6570 \"plantuml.commandArgs\" : [ \"-DPLANTUML_LIMIT_SIZE=20000\" ], \u5f53\u751f\u6210\u7684uml\u5c3a\u5bf8\u5f88\u5927\u7684\u65f6\u5019\u901a\u8fc7\u4fee\u6539\u8be5\u53c2\u6570\u53ef\u4ee5\u907f\u514d\u751f\u6210\u56fe\u7247\u88ab\u622a\u65ad\u7684\u95ee\u9898\u3002","title":"\u751f\u6210\u56fe\u7247"}]}